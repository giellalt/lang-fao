version: 1
reporting: checks-v1
policy:
  pullRequests: public
tasks:
  $let:
    head_rev:
      $if: tasks_for == "github-pull-request"
      then: ${event.pull_request.head.sha}
      else: ${event.after}
    repository:
      $if: tasks_for == "github-pull-request"
      then: ${event.pull_request.head.repo.html_url}
      else: ${event.repository.html_url}
    repo_name:
      $if: tasks_for == "github-pull-request"
      then: ${event.pull_request.parent.name}
      else: ${event.repository.name}
    repo_full_name:
      $if: tasks_for == "github-pull-request"
      then: ${event.pull_request.parent.full_name}
      else: ${event.repository.full_name}
    branch:
        $if: "event.ref[:11] == 'refs/heads/'"
        then: "branch:${event.ref[11:]}"
        else:
          $if: "event.ref[:10] == 'refs/tags/'"
          then: "tag:${event.ref[10:]}"
          else: "pull-request"
    should_run:
      $match:
        (tasks_for == "github-push") || (tasks_for == "github-pull-request" && event["action"] in ["opened","reopened","synchronize"]):
  in:
    $if: should_run
    then:
      - metadata:
          name: Decision task
          description: ''
          owner: ${event.sender.login}@users.noreply.github.com
          source: ${event.compare}
        tags:
          git_ref: ${event.ref}
        projectId: "divvun"
        taskQueueId: divvun/linux
        deadline:
          $fromNow: 1 day
        scopes:
          - "assume:repo:github.com/${repo_full_name}:${branch}"
          - "object:upload:divvun:*"
        payload:
          maxRunTime: 3600
          # TODO: Change this to a set tag and push dockerfile
          image: "registry.gitlab.com/bastien.orivel.tc/divvun-ci-docker:latest"
          features:
            # Needed for the decision task to create other tasks
            taskclusterProxy: true
          command:
            - /bin/bash
            - '--login'
            - '-e'
            - '-c'
            - >-
              git init ci &&
              cd ci &&
              git fetch --depth 1 "$CI_REPO_URL" "$CI_REPO_REF" &&
              git reset --hard FETCH_HEAD &&
              python3 decision_task.py
          env:
            GIT_URL: ${event.repository.clone_url}
            TASK_FOR: ${tasks_for}
            GIT_REF: ${event.ref}
            GITHUB_REF: ${event.ref}
            GIT_SHA: ${event.after}
            TASK_OWNER: ${event.pusher.name}@users.noreply.github.com
            TASK_SOURCE: ${event.compare}
            REPO_NAME: ${repo_name}
            REPO_FULL_NAME: ${repo_full_name}
            CI_REPO_URL: https://github.com/divvun/taskcluster-scripts.git
            CI_REPO_REF: main
