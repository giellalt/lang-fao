## Include this file to lexc directory to build lexical automata

## Copyright (C) 2011 Samediggi

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

####### Source file defs: ########

#! @param GT_LEXC_ROOT required, define name of file holding root lexicon
#! @param GT_LEXC_SRCS optional, space separated list of file names holding
#!		  supplementary lexicon data
#! @param GENERATED_LEXC_SRCS optional, space separated list of file names
#!        holding supplementary lexicon data generated from xml files.
#! @param GT_XML_SRCS optional, space separated list of xml source file names
GT_LEXC_ALLSRC=$(GT_LEXC_ROOT) $(GT_LEXC_SRCS) \
				$(GENERATED_LEXC_SRCS) $(GT_XML_SRCS)

# All sources need to be included in the tarball
EXTRA_DIST=$(GT_LEXC_ALLSRC)

####### Automake targets: ########

# The transducers we build and don't distribute depend on the configuration:
GT_LEXICAL=
if CAN_HFST
GT_LEXICAL+=$(GTLANG).lexc.hfst
endif
if CAN_XFST
GT_LEXICAL+=$(GTLANG).lexc.xfst
endif
noinst_DATA=$(GT_LEXICAL)

####### XML2LEXC build rules: ####
XSLDIR = $(GTCORE)/scripts/xsl
if CAN_SAXON
stems/%.lexc: stems/%.xml $(XSLDIR)/generate_lex-fileVM.xsl
	$(AM_V_GEN)$(SAXON) -xsl:$(XSLDIR)/generate_lex-fileVM.xsl $(abs_srcdir)/$< \
		inFile=$(abs_srcdir)/$< > $@
else
if CAN_JAVA
MF   = -Xmx1024m
#EF   = -it main # Saxon-B compatible version
EF   = -it:main # Saxon-HE compatible version
XSLPROC = net.sf.saxon.Transform

# This target will convert each individual xml file to lexc:
stems/%.lexc: stems/%.xml $(XSLDIR)/generate_lex-fileVM.xsl
	$(AM_V_GEN)$(JV) $(MF) -cp $$(@CYGWINJAVAPATH@ "@SAXONJAR@") $(XSLPROC) \
		$(EF) $$(@CYGWINJAVAPATH@ "$(XSLDIR)/generate_lex-fileVM.xsl") \
		inFile=$$(@CYGWINJAVAPATH@ "$(abs_srcdir)/$<") > $@
endif
endif
####### HFST build rules: ########

# lexical transducer building rules:
# for HFST:
$(GTLANG).lexc.hfst: $(GT_LEXC_ROOT) $(GT_LEXC_SRCS) $(GENERATED_LEXC_SRCS)
	$(AM_V_GEN)cat $^ > $@.tmp.lexc
	$(AM_V_GEN)$(HFST_LEXC) -f foma -o $@.foma $@.tmp.lexc
	$(AM_V_GEN)$(HFST_FST2FST) -f openfst-tropical -i $@.foma -o $@
	$(AM_V_GEN)rm -f $@.tmp.lexc
	$(AM_V_GEN)rm -f $@.foma

####### Xerox build rules: #######

$(GTLANG).lexc.xfst: $(GT_LEXC_ROOT) $(GT_LEXC_SRCS) $(GENERATED_LEXC_SRCS)
	$(AM_V_GEN)$(PRINTF) \
		"compile-source $^\nsource-to-result\nsave-source $@\nquit\n" \
		> $@.script
	$(AM_V_GEN)$(LEXC) < $@.script
	$(AM_V_GEN)rm -f $@.script

####### Other targets: ###########
clean-local:
	-rm -f $(GT_LEXICAL) *.foma *.tmp.* *.hfst *.xfst *.script

maintainer-clean-local:
	-rm -f $(GENERATED_LEXC_SRCS)

# vim: set ft=automake: 
