## Include this file in top-level srcdir to compile FSTs
## Copyright: SÃ¡mediggi/Divvun/UiT
## Licence: GPL v3+

####### Automake targets: ########

APERTIUM_ANALYSER_HFST=
APERTIUM_ANALYSERS_GT_HFST=
APERTIUM_ANALYSERS_AP_HFST=
APERTIUM_ANALYSERS_ATTGZ=

APERTIUM_GENERATORS_HFST=

# The list of target languages are taken from configure.ac:
TARGET_LANGS=$(MT_AP_TARGET_LANGS)

if WANT_APERTIUM
# This is just a generic analyser. You need to add pair-specific analysers to
# the language-specific part further down.
APERTIUM_ANALYSER_HFST+=analyser-mt-gt-desc.hfst

# Build list of target language transducers from the list of target languages:
APERTIUM_ANALYSERS_GT_HFST+=\
	$(addsuffix .hfst,$(addprefix analyser-mt-gt-desc.,$(TARGET_LANGS)))

# Build list of apertium tagged files by replacing -gt- with -apertium-:
APERTIUM_ANALYSERS_AP_HFST+=\
	$(subst -gt-,-apertium-,$(APERTIUM_ANALYSERS_GT_HFST))

# Build list of att.gz files by adding the suffix .att.gz to the basenames
# of the filenames:
APERTIUM_ANALYSERS_ATTGZ+=\
	$(addsuffix .att.gz,$(basename $(APERTIUM_ANALYSERS_AP_HFST)))

APERTIUM_GENERATORS_HFST+=generator-mt-gt-norm.hfst \
						  generator-mt-apertium-norm.hfst \
						  generator-mt-apertium-norm.att.gz

endif # WANT_APERTIUM


if CAN_HFST
hfstdatadir=$(datadir)/hfst/$(GTLANG)
noinst_DATA=$(APERTIUM_ANALYSER_HFST) \
			$(APERTIUM_ANALYSERS_GT_HFST)
hfstdata_DATA=$(APERTIUM_ANALYSERS_AP_HFST) \
			  $(APERTIUM_ANALYSERS_ATTGZ) \
			  $(APERTIUM_GENERATORS_HFST)
endif # CAN_HFST

# Apertium generator - GTD tags. All filtering happens here:
generator-mt-gt-norm.tmp.hfst: $(top_builddir)/src/generator-raw-gt-desc.hfst \
			$(top_builddir)/src/filters/make-optional-semantic-tags.hfst      \
			$(top_builddir)/src/filters/remove-derivation-position-tags.hfst  \
			$(top_builddir)/src/filters/remove-homonymy-tags.hfst             \
			$(top_builddir)/src/filters/remove-variant-tags.hfst              \
			$(top_builddir)/src/filters/remove-norm-comp-tags.hfst            \
			$(top_builddir)/src/filters/remove-number-string-tags.hfst        \
			$(top_builddir)/src/filters/remove-NG-strings.hfst                \
			$(top_builddir)/src/filters/remove-usage-tags.hfst                \
			$(top_builddir)/src/filters/remove-sub-forms.hfst                 \
			$(top_builddir)/src/filters/remove-orthography-tags.hfst          \
			$(top_builddir)/src/filters/remove-Orth_IPA-strings.hfst          \
			$(top_builddir)/src/filters/remove-hyphenation-marks.hfst         \
			$(top_builddir)/src/filters/remove-infl_deriv-borders.hfst        \
			$(top_builddir)/src/filters/remove-word-boundary.hfst
	$(AM_V_GEN)$(PRINTF) "\
		@\"$(top_builddir)/src/filters/make-optional-semantic-tags.hfst\"     \
	.o. @\"$(top_builddir)/src/filters/remove-derivation-position-tags.hfst\" \
	.o. @\"$(top_builddir)/src/filters/remove-homonymy-tags.hfst\"            \
	.o. @\"$(top_builddir)/src/filters/remove-variant-tags.hfst\"             \
	.o. @\"$(top_builddir)/src/filters/remove-norm-comp-tags.hfst\"           \
	.o. @\"$(top_builddir)/src/filters/remove-number-string-tags.hfst\"       \
	.o. @\"$(top_builddir)/src/filters/remove-usage-tags.hfst\"               \
	.o. @\"$(top_builddir)/src/filters/remove-sub-forms.hfst\"                \
	.o. @\"$(top_builddir)/src/filters/remove-NG-strings.hfst\"               \
	.o. @\"$(top_builddir)/src/filters/remove-orthography-tags.hfst\"         \
	.o. @\"$(top_builddir)/src/filters/remove-Orth_IPA-strings.hfst\"         \
   	.o. @\"$<\" \
   	.o. @\"$(top_builddir)/src/filters/remove-word-boundary.hfst\"            \
   	.o. @\"$(top_builddir)/src/filters/remove-hyphenation-marks.hfst\"        \
   	.o. @\"$(top_builddir)/src/filters/remove-infl_deriv-borders.hfst\"       \
    	;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

# Apertium analyser - GTD tags. Target language independent filtering
# happens here:
analyser-mt-gt-desc.tmp.hfst: $(top_builddir)/src/generator-raw-gt-desc.hfst \
			$(top_builddir)/src/filters/remove-derivation-position-tags.hfst \
			$(top_builddir)/src/filters/remove-homonymy-tags.hfst            \
			$(top_builddir)/src/filters/remove-variant-tags.hfst             \
			$(top_builddir)/src/filters/remove-norm-comp-tags.hfst           \
			$(top_builddir)/src/filters/remove-number-string-tags.hfst       \
			$(top_builddir)/src/filters/remove-usage-tags.hfst               \
			$(top_builddir)/src/filters/remove-hyphenation-marks.hfst        \
			$(top_builddir)/src/filters/remove-infl_deriv-borders.hfst       \
			$(top_builddir)/src/filters/remove-orthography-tags.hfst         \
			$(top_builddir)/src/filters/remove-Orth_IPA-strings.hfst         \
			$(top_builddir)/src/filters/remove-word-boundary.hfst
	$(AM_V_GEN)$(PRINTF) "\
		@\"$(top_builddir)/src/filters/remove-derivation-position-tags.hfst\" \
	.o. @\"$(top_builddir)/src/filters/remove-homonymy-tags.hfst\"            \
	.o. @\"$(top_builddir)/src/filters/remove-variant-tags.hfst\"             \
	.o. @\"$(top_builddir)/src/filters/remove-norm-comp-tags.hfst\"           \
	.o. @\"$(top_builddir)/src/filters/remove-number-string-tags.hfst\"       \
	.o. @\"$(top_builddir)/src/filters/remove-usage-tags.hfst\"               \
	.o. @\"$(top_builddir)/src/filters/remove-orthography-tags.hfst\"         \
	.o. @\"$(top_builddir)/src/filters/remove-Orth_IPA-strings.hfst\"         \
   	.o. @\"$<\" \
   	.o. @\"$(top_builddir)/src/filters/remove-word-boundary.hfst\"            \
   	.o. @\"$(top_builddir)/src/filters/remove-hyphenation-marks.hfst\"        \
   	.o. @\"$(top_builddir)/src/filters/remove-infl_deriv-borders.hfst\"       \
    	;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

# Relabel GTD tags to Apertium tags - generator:
generator-mt-apertium-norm.hfst: \
			generator-mt-gt-norm.hfst \
			$(top_builddir)/src/tagsets/apertium.relabel
	$(AM_V_GEN)$(HFST_SUBSTITUTE) $(HFSTFLAGS) -i $< \
		-F $(top_builddir)/src/tagsets/apertium.relabel \
		-o $@

# Relabel GTD tags to Apertium tags - analyser:
analyser-mt-apertium-desc.%.hfst: \
			analyser-mt-gt-desc.%.hfst \
			$(top_builddir)/src/tagsets/apertium.relabel
	$(AM_V_GEN)$(HFST_SUBSTITUTE) $(HFSTFLAGS) -i $< \
		-F $(top_builddir)/src/tagsets/apertium.relabel \
		| $(HFST_FST2FST) $(HFSTFLAGS) -t \
		-o $@

# Target language specific filtering + inversion to a real analyser:
# (filtering not yet implemented, coming soon)
$(APERTIUM_ANALYSERS_GT_HFST): \
analyser-mt-gt-desc.%.hfst: analyser-mt-gt-desc.hfst
	$(AM_V_GEN)$(HFST_FST2FST) $(HFST_FLAGS) -t -i $< -o $@

%.att: %.hfst
	$(AM_V_GEN)$(HFST_FST2FST) $(HFSTFLAGS) -w -i $< \
		| $(HFST_FST2TXT) -o $@

%.att.gz: %.att
	$(AM_V_GEN)$(GZIP) -9 -c $< > $@

#### HFST transducer fallback target:
#### - inversion is needed FOR THE ANALYSER because the hfst model is upside
#### down compared to Xerox AT APPLICATION TIME. The other command makes the
#### final transducer ready for use.
analyser%.hfst: analyser%.tmp.hfst
	$(AM_V_GEN)$(HFST_INVERT) $< \
		| $(HFST_FST2FST) $(HFST_FLAGS) -f olw -o $@

generator%.hfst: generator%.tmp.hfst
	$(AM_V_GEN)$(HFST_FST2FST) $(HFST_FLAGS) -t -i $< -o $@

#### Xerox transducer fallback target:
%.xfst: %.tmp.xfst
	$(AM_V_CP)cp -f $< $@
