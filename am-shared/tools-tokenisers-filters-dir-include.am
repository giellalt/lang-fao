## Process this file with automake to produce Makefile.in

## Copyright (C) 2011 Samediggi

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

####### Compilation variables: #######
HFST_REGEXP2FST_FLAGS="--xerox-composition=ON"

# Variable to hold filename for file containing all tags used
# (all symbols starting or ending with '+')
TAG_FILE=tags.txt
FLAG_FILE=flags.txt

# Variable to hold filename for fst used as source for extracting tags,
# sans extension
TAG_EXTRACTION_FST=$(top_builddir)/src/analyser-%-gt-desc

####### Source file and target defs: ########
GT_TOKENISERS_FILTER_SRCS=

if WANT_TOKENISERS
GT_TOKENISERS_FILTER_SRCS+=make-disamb-CG-tags.regex \
						   disamb-tokeniser-flags.regex \
						   make-url-CG-tags.regex
endif # WANT_TOKENISERS

if WANT_GRAMCHECK
GT_TOKENISERS_FILTER_SRCS+=make-gramcheck-CG-tags.regex \
						   gramcheck-tokeniser-flags.regex \
						   make-url-CG-tags.regex
endif # WANT_GRAMCHECK

# These will be included in the distribution:
EXTRA_DIST=$(GT_LOCAL_TOKENISERS_FILTER_SRCS)

GT_TOKENISERS_FILTER_ALL_SRCS=\
        $(GT_TOKENISERS_FILTER_SRCS) \
        $(GT_LOCAL_TOKENISERS_FILTER_SRCS) \
        $(GT_LOCAL_COPY_FILTER_SRCS) \
        $(GENERATED_REGEXES)

# This is what we build:
noinst_DATA=$(GT_TOKENISERS_FILTER_TARGETS)

# Automatically detect the targets to be built:
GT_TOKENISERS_FILTER_TARGETS=

if WANT_TOKENISERS
if CAN_HFST
GT_TOKENISERS_FILTER_TARGETS+=\
        $(patsubst %.regex,%.hfst,$(GT_TOKENISERS_FILTER_ALL_SRCS))
endif # CAN_HFST

# Hfst tokenisers are specific to Hfst, so skip the rest.
#if CAN_XFST
#GT_TOKENISERS_FILTER_TARGETS+=\
#        $(patsubst %.regex,%.xfst,$(GT_TOKENISERS_FILTER_ALL_SRCS))
#endif # CAN_XFST
#
#if CAN_FOMA
#GT_TOKENISERS_FILTER_TARGETS+=\
#        $(patsubst %.regex,%.foma,$(GT_TOKENISERS_FILTER_ALL_SRCS))
#endif # CAN_FOMA

# If tokenisers are turned off:
else !WANT_TOKENISERS

# We still want to build filters for the grammar checker if they are enabled:
if WANT_GRAMCHECK
if CAN_HFST
GT_TOKENISERS_FILTER_TARGETS+=\
        $(patsubst %.regex,%.hfst,$(GT_TOKENISERS_FILTER_ALL_SRCS))
endif # CAN_HFST
endif # WANT_GRAMCHECK
endif # WANT_TOKENISERS

####### Build rules for creating regexes from tag list: #######

### Reformat tags:
make-%-CG-tags.regex: %-$(TAG_FILE)
	$(AM_V_GEN)$(GTCORE)/scripts/taglist2make_CG_tags_regex.sh $< > $@

%-tokeniser-flags.regex: %-$(FLAG_FILE)
	$(AM_V_GEN)$(GTCORE)/scripts/flaglist2make_flag_regex.sh $< > $@

####### Copy regex files from the Giella core if not found locally: ########
%.regex: $(GIELLA_SHARED)/all_langs/src/filters/%.regex
	$(AM_V_CP)cp -f $< $@

####### ... OR from $top_builddir/src/filters/
%.regex: $(top_builddir)/src/filters/%.regex
	$(AM_V_CP)cp -f $< $@

####### ... OR from $top_srcdir/src/filters/
%.regex: $(top_srcdir)/src/filters/%.regex
	$(AM_V_CP)cp -f $< $@

##########################################
# General build rules included from here:#

include $(top_srcdir)/am-shared/regex-include.am
include $(top_srcdir)/am-shared/hfst-format-include.am
include $(top_srcdir)/am-shared/tag-extraction-include.am
include $(top_srcdir)/am-shared/silent_build-include.am

# vim: set ft=automake:
