## Process this file with automake to produce Makefile.in

## Copyright (C) 2011 Samediggi

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

########################################
########## Twolc build rules. ##########
########################################

####### Silent builds: ########
# Silence macros defined here instead of using the include file to avoid
# warnings of double definitions of the macros by
# the src-phonetics-dir-include.am file - it includes both this file
# and the xfscript-include file. If they were to use the silent_build-include.am
# file, all macros would be defined twice, and AM would bork and stop.
AM_V_HTWOLC   = $(AM_V_HTWOLC_@AM_V@)
AM_V_HTWOLC_  = $(AM_V_HTWOLC_@AM_DEFAULT_V@)
AM_V_HTWOLC_0 = @echo "  HTWOLC   $@";

AM_V_TWOLC   = $(AM_V_TWOLC_@AM_V@)
AM_V_TWOLC_  = $(AM_V_TWOLC_@AM_DEFAULT_V@)
AM_V_TWOLC_0 = @echo "  TWOLC    $@";

# Let the verbosity of some command line tools follow the automake verbosity:
TWOLCVERBOSITY=$(if $(strip $(filter-out false,$(AM_V_P))), ,-q)

####### HFST build rules: ########

# hfst-twolc should by default resolve
HFSTTWOLFLAGS=--resolve

# All twolc targets should be built by suffix rules;
# just list them in some nice automake targets and you're good to go
.twolc.hfst:
	$(AM_V_HTWOLC)$(HFST_TWOLC) $(TWOLCVERBOSITY) \
			$(HFSTFLAGS) $(HFSTTWOLCFLAGS) -i $< -o $@

####### Xerox build rules: #######

# All twolc targets should be built by suffix rules;
# just list them in some nice automake targets and you're good to go
.twolc.xfst:
	$(AM_V_at)$(PRINTF) "read-grammar $<\ncompile\nsave-binary $@\nquit\n" \
		> $@.script
	$(AM_V_TWOLC)$(TWOLC) $(TWOLCVERBOSITY) < $@.script
	$(AM_V_at)rm -f $@.script

# vim: set ft=automake:
