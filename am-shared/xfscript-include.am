## Process this file with automake to produce Makefile.in

## Copyright (C) 2011 Samediggi

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

###########################################
########## XFScript build rules. ##########
###########################################

####### Silent builds: ########
# Silence macros defined here instead of using the include file to avoid
# warnings of double definitions of the macros by
# the src-phonetics-dir-include.am file - it includes both this file
# and the twolc-include file. If they were to use the silent_build-include.am
# file, all macros would be defined twice, and AM would bork and stop.
AM_V_HXFST   = $(AM_V_HXFST_@AM_V@)
AM_V_HXFST_  = $(AM_V_HXFST_@AM_DEFAULT_V@)
if CAN_HFST_FOMA
AM_V_HXFST_0 = @echo "  HFOMA    $@";
else
if CAN_HFST_XFST
AM_V_HXFST_0 = @echo "  HXFST    $@";
endif # CAN_HFST_XFST
endif # CAN_HFST_FOMA

AM_V_XFST   = $(AM_V_XFST_@AM_V@)
AM_V_XFST_  = $(AM_V_XFST_@AM_DEFAULT_V@)
AM_V_XFST_0 = @echo "  XFST     $@";

# Let the verbosity of some command line tools follow the automake verbosity:
XFSTVERBOSITY=$(if $(strip $(filter-out false,$(AM_V_P))), ,-q)

####### HFST build rules: ########

# Which hfst xfscript processor to use? Foma is default, there are still issues
# with hfst-xfst.
if CAN_HFST_FOMA
HFST_XFST_COMPILER=$(HFST_FOMA) $(XFSTVERBOSITY) -f

else
if CAN_HFST_XFST
HFST_XFST_COMPILER=$(HFST_XFST) $(XFSTVERBOSITY) -F

else
HFST_XFST_COMPILER=false
endif # CAN_HFST_XFST
endif # CAN_HFST_FOMA

# HFST fst targets:
# Hfst will always build fst's that can be used directly - no need for a tmp
# file (not even for local modifications, since all modifications can be done
# directly in the xfscript file)-
%.hfst: %.xfscript
	$(AM_V_at)   cp $< $@.script
	$(AM_V_at)   $(PRINTF) "save stack $@" >> $@.script
	$(AM_V_HXFST)$(HFST_XFST_COMPILER) $@.script
	$(AM_V_at)   rm -f $@.script

####### Xerox build rules: #######
# Xerox fst's will need to be inverted *IFF* used stand-alone. xfscript files
# used for intersection & composition can and must be  used as is. For this
# reason we need to go via a tmp file, such that we can invert the tmp file for
# e.g. orthography conversion fst's. In the case of fst's for intersection and
# composition, the fst will just be copied from tmp to the target. These oper-
# ations are done in the *.am files which include this file.
%.tmp.xfst: %.xfscript
	$(AM_V_XFST)$(XFST) $(XFSTVERBOSITY) -l $< -e "save stack $@" -stop

# vim: set ft=automake:
