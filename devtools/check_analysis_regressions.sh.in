#!/bin/bash

# Take tab-separated input in 2+ colums (like a typos file), extract the first
# column, send it through a spell checker, and convert the result to xml.
# Finally open the xml in the default browser.

# For debugging, uncomment this command:
# set -x

# Language being tested, ISO 639-1 code if available:
giella_lang=@GTLANG2@

# Directory variables:
top_srcdir=@top_srcdir@
top_builddir=@top_builddir@
abs_top_builddir=@abs_top_builddir@
giella_core=@GIELLA_CORE@
corpusdir=$top_srcdir/test/data

# File variables:
abbr_file=$top_srcdir/tools/preprocess/abbr.txt
source_corpus=analysis_check_corpus
morpha_corpus=$source_corpus.morpha
disamb_corpus=$source_corpus.disamb
functn_corpus=$source_corpus.functn
depend_corpus=$source_corpus.depend

analyser=$top_builddir/src/analyser-disamb-gt-desc
tokeniser=$top_builddir/tools/preprocess/tokeniser-disamb-gt-desc.pmhfst
disambiguator=$top_srcdir/src/syntax/disambiguation.cg3
functions_cg=$top_srcdir/src/syntax/functions.cg3
dependencies=$top_srcdir/src/syntax/dependency.cg3
mwe_dis=$top_srcdir/tools/preprocess/mwe-dis.cg3

# Tools:
xerox_lookup=@LOOKUP@
foma_lookup=@FLOOKUP@
hfst_lookup=@HFST_OPTIMIZED_LOOKUP@
hfst_tokenise=@HFST_TOKENISE@
vislcg3=@VISLCG3@
cg_mwesplit=cg-mwesplit

# Use autotools mechanisms to only run the configured fst types in the tests:
fsttype=
@CAN_HFST_TRUE@fsttype="$fsttype hfst"
@CAN_XFST_TRUE@fsttype="$fsttype xfst"
@CAN_FOMA_TRUE@fsttype="$fsttype foma"

# Use autotools mechanisms to check for hfst-tokenise:
htokenise_true=x
@WANT_TOKENISERS_TRUE@htokenise_true=yes

# move into devtools dir in the build dir:
cd $abs_top_builddir/devtools

function open_diffs() {
    if test ! -f $corpusdir/$morpha_corpus.$fstsuffix.goldst.txt; then
        echo "First time run!"
        echo "Adding $corpusdir/$morpha_corpus.$fstsuffix.goldst.txt to svn!"
        cp $morpha_corpus.$fstsuffix.txt \
           $corpusdir/$morpha_corpus.$fstsuffix.goldst.txt
        svn add $corpusdir/$morpha_corpus.$fstsuffix.goldst.txt
    else
        opendiff $corpusdir/$morpha_corpus.$fstsuffix.goldst.txt \
          $morpha_corpus.$fstsuffix.txt \
          -merge $corpusdir/$morpha_corpus.$fstsuffix.goldst.txt
    fi
}

function run_cg_tests() {
    $vislcg3 -g $disambiguator \
      < $morpha_corpus.$fstsuffix.txt \
      > $disamb_corpus.$fstsuffix.txt
    $vislcg3 -g $functions_cg \
      < $disamb_corpus.$fstsuffix.txt \
      > $functn_corpus.$fstsuffix.txt
    $vislcg3 -g $dependencies \
      < $functn_corpus.$fstsuffix.txt \
      > $depend_corpus.$fstsuffix.txt
}

function run_tests() {
    preprocess \
      < $corpusdir/$source_corpus.txt \
      | $lookuptool $analyser.$fstsuffix \
      | $giella_core/scripts/lookup2cg \
      | perl $giella_core/scripts/sort-cg-cohort.pl \
      | grep -v '^$' \
      > $morpha_corpus.$fstsuffix.txt
    run_cg_tests
	open_diffs
}

function run_htokeniser_tests() {
    $hfst_tokenise --giella-cg --weight-classes=1 $tokeniser \
      < $corpusdir/$source_corpus.txt \
      | $vislcg3 -g $mwe_dis \
      | $cg_mwesplit \
      > $morpha_corpus.$fstsuffix.txt
    grep -v '^:' \
      < $morpha_corpus.$fstsuffix.txt \
      | perl -pe 's/ <W[^>]+>//g' \
      | perl $giella_core/scripts/sort-cg-cohort.pl \
      | grep -v '^$' \
      > $morpha_corpus.htokoldcomp.txt
    run_cg_tests
	open_diffs
}

# Loop over the enabled transducer types - we test all that are configured:
for f in $fsttype; do
	# Determine the fst filename suffix based on fst engine:
	if test $f == "xfst"; then
		lookuptool="$xerox_lookup -flags mbTT"
		fstsuffix="xfst"
		run_tests
	elif test $f == "foma"; then
		lookuptool="$foma_lookup"
		fstsuffix="foma"
		run_tests
	elif test $f == "hfst"; then
		lookuptool="$hfst_lookup"
		fstsuffix="hfstol"
		run_tests
		if test $htokenise_true == "yes"; then
			fstsuffix="hfsttok"
			run_htokeniser_tests
		fi
	else
	    let "Fail += 1"
		echo "FAIL: Unknown fst type! FST=$f"
	    continue
	fi
done
