# ===================== #
# Faroese disambiguator #
# ===================== #




# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<¶>";



# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>); LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

LIST N = N ;
LIST V = V ;
LIST A = A ;
LIST P = P ;
LIST Prop = Prop ;
LIST Adv = Adv ;
LIST CC = CC ;
LIST CS = CS ;
LIST Interj = Interj ;
LIST Abbr = Abbr ;
LIST ACR = ACR ;
LIST Pr = Pr ;
LIST Pron = Pron ;
LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Det = Det ;
LIST Refl = Refl ;
LIST Recipr = Recipr ;
LIST Poss = Poss ;
LIST Nom = Nom ;
LIST Acc = Acc ;
LIST Gen = Gen ;
LIST Dat = Dat ;
LIST Msc = Msc ;
LIST Fem = Fem ;
LIST Neu = Neu ;
LIST Sg = Sg ;
LIST Pl = Pl ;
LIST Def = Def ;
LIST Indef = Indef ;
LIST Cmp = Cmp ;
LIST Superl = Superl ;
LIST Prs = Prs ;
LIST Prt = Prt ;
LIST 1Sg = 1Sg ;
LIST 2Sg = 2Sg ;
LIST 3Sg = 3Sg ;
LIST Inf = Inf ;
LIST PrfPrc = PrfPrc ;
LIST PrsPrc = PrsPrc ;
LIST Imp = Imp ;
LIST Cmpnd = Cmpnd ;
LIST CLB = CLB ;
LIST PUNCT = PUNCT ;
LIST LEFT = LEFT ;
LIST RIGHT = RIGHT ;




LIST TAG = N V A P Adv CC CS Interj Pr Pron Pers Det Refl Recipr Poss Nom Acc Gen
Dat Msc Fem Neu Sg Pl Def Indef Cmp Sup Prs Prt 1Sg 2Sg 3Sg Inf PrfPrc
PrsPrc Sup Imp CLB PUNCT LEFT RIGHT ;

# Sets

LIST ACCPREP = "aftan" "aftanvert" "ábeint" "áraka" "foruttan" "gjøgnum" "hóast" "inntil" "ígjøgnum
íkring" "kring" "niðan" "oman" "síðan" "umframt" "umhvørvis" "umkring" "báðumegin
hasumegin" "hvørgumegin" "høgrumegin" "sínumegin" "skeivumegin" "somumegin
vinstrumegin" "øðrumegin" "eystan" "norðan" "sunnan" "vestan" ;

LIST DATPREP = "hjá" "með" "á" "aftrat" "afturat" "afturímóti" "andstøðis" "andsýnis" "mótvegis" "nær" "sambært" "viðvíkjandi" ;

LIST ACCDATPREP = "í" "á" "undir" "yfir" "eftir" "fyri" "við" ;

LIST ACCGENPREP = "innan" "uttan" "millum" "til" "vegna" ;

# Complementary set

SET NOTDAT = TAG - Dat ;
SET NOTACC = TAG - Acc ;
SET NOTACCDAT = TAG - Acc - Dat ;

SET PRE-N =  A | Det | (N Gen) ;

SET WORD = N | V | A | P | Prop | Adv | CC | CS | Interj ;

SET NPNH = WORD - PRE-N ;

# Syntax tags

LIST @SUBJ = @SUBJ ;
LIST @OBJ = @OBJ ;
LIST @N> = @N> ;
LIST @N< = @N< ;
LIST @SPRED = @SPRED ;
LIST @VFIN = @VFIN ;
LIST @ADVL = @ADVL ;

# ======== #
  MAPPINGS #
# ======== #

MAP (@SUBJ @SPRED) TARGET (N Nom);

MAP (@OBJ @P<) TARGET (N Acc);
MAP (@IOBJ @P<) TARGET (N Dat);

MAP (@N> @P<) TARGET (N Gen);

MAP (@N>) TARGET (A Nom) OR (Dem Nom) IF (*1 (N Nom) BARRIER NPNH);
MAP (@N>) TARGET (A Acc) OR (Dem Acc) IF (*1 (N Acc) BARRIER NPNH);
MAP (@N>) TARGET (A Dat) OR (Dem Dat) IF (*1 (N Dat) BARRIER NPNH);
MAP (@N>) TARGET (A Gen) OR (Dem Gen) IF (*1 (N Gen) BARRIER NPNH);

MAP (@VFIN) TARGET (V Ind) OR (V Imp);

MAP (@ADVL) TARGET Pr ;

MAP (@N<) TARGET Poss IF (0 Nom)(-1 (N Nom));
MAP (@N<) TARGET Poss IF (0 Acc)(-1 (N Acc));
MAP (@N<) TARGET Poss IF (0 Dat)(-1 (N Dat));
MAP (@N<) TARGET Poss IF (0 Gen)(-1 (N Gen));
# =========== #
  CONSTRAINTS #
# =========== #



# POS disambiguation
# ==================

# Pron Pers or Dem

# Specific lexemes
# ================

SELECT Pr IF (0 ("á"))(1 Dat OR Acc);
SELECT CS IF (0 ("at"))(1C Inf);


REMOVE Dem IF (0 Pers)(NOT 1 NPNH OR N);

# NP internal constraints
# =======================

# Determiner disambiguation

REMOVE Neu IF (0 (Pron Dem Nom))(*1 (N Msc Nom) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (Pron Dem Nom))(*1 (N Fem Nom) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (Pron Dem Acc))(*1 (N Msc Acc) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (Pron Dem Acc))(*1 (N Fem Acc) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (Pron Dem Gen))(*1 (N Msc Gen) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (Pron Dem Gen))(*1 (N Fem Gen) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (Pron Dem Dat))(*1 (N Msc Dat) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (Pron Dem Dat))(*1 (N Fem Dat) BARRIER NPNH LINK NOT 0 Neu);

REMOVE Msc IF (0 (Pron Dem Nom))(*1 (N Fem Nom) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (Pron Dem Nom))(*1 (N Neu Nom) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (Pron Dem Acc))(*1 (N Fem Acc) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (Pron Dem Acc))(*1 (N Neu Acc) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (Pron Dem Gen))(*1 (N Fem Gen) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (Pron Dem Gen))(*1 (N Neu Gen) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (Pron Dem Dat))(*1 (N Fem Dat) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (Pron Dem Dat))(*1 (N Neu Dat) BARRIER NPNH LINK NOT 0 Msc);

REMOVE Fem IF (0 (Pron Dem Nom))(*1 (N Msc Nom) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (Pron Dem Nom))(*1 (N Neu Nom) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (Pron Dem Acc))(*1 (N Msc Acc) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (Pron Dem Acc))(*1 (N Neu Acc) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (Pron Dem Gen))(*1 (N Msc Gen) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (Pron Dem Gen))(*1 (N Neu Gen) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (Pron Dem Dat))(*1 (N Msc Dat) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (Pron Dem Dat))(*1 (N Neu Dat) BARRIER NPNH LINK NOT 0 Fem);

# Case disambiguation
SELECT Nom IF (0 (Pron Dem))(*1C Nom BARRIER NPNH);
SELECT Acc IF (0 (Pron Dem))(*1C Acc BARRIER NPNH);
SELECT Dat IF (0 (Pron Dem))(*1C Dat BARRIER NPNH);
SELECT Gen IF (0 (Pron Dem))(*1C Gen BARRIER NPNH);
						  
REMOVE Nom IF (0 (Pron Dem))(*1 N    BARRIER NPNH LINK NOT 0 Nom);
REMOVE Acc IF (0 (Pron Dem))(*1 N    BARRIER NPNH LINK NOT 0 Acc);
REMOVE Dat IF (0 (Pron Dem))(*1 N    BARRIER NPNH LINK NOT 0 Dat);
REMOVE Gen IF (0 (Pron Dem))(*1 N    BARRIER NPNH LINK NOT 0 Gen);


# Adjective disambiguation
# ------------------------

REMOVE Neu IF (0 (A Nom))(*1 (N Msc Nom) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (A Nom))(*1 (N Fem Nom) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (A Acc))(*1 (N Msc Acc) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (A Acc))(*1 (N Fem Acc) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (A Gen))(*1 (N Msc Gen) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (A Gen))(*1 (N Fem Gen) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (A Dat))(*1 (N Msc Dat) BARRIER NPNH LINK NOT 0 Neu);
REMOVE Neu IF (0 (A Dat))(*1 (N Fem Dat) BARRIER NPNH LINK NOT 0 Neu);
														       
REMOVE Msc IF (0 (A Nom))(*1 (N Fem Nom) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (A Nom))(*1 (N Neu Nom) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (A Acc))(*1 (N Fem Acc) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (A Acc))(*1 (N Neu Acc) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (A Gen))(*1 (N Fem Gen) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (A Gen))(*1 (N Neu Gen) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (A Dat))(*1 (N Fem Dat) BARRIER NPNH LINK NOT 0 Msc);
REMOVE Msc IF (0 (A Dat))(*1 (N Neu Dat) BARRIER NPNH LINK NOT 0 Msc);
														       
REMOVE Fem IF (0 (A Nom))(*1 (N Msc Nom) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (A Nom))(*1 (N Neu Nom) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (A Acc))(*1 (N Msc Acc) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (A Acc))(*1 (N Neu Acc) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (A Gen))(*1 (N Msc Gen) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (A Gen))(*1 (N Neu Gen) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (A Dat))(*1 (N Msc Dat) BARRIER NPNH LINK NOT 0 Fem);
REMOVE Fem IF (0 (A Dat))(*1 (N Neu Dat) BARRIER NPNH LINK NOT 0 Fem);

# Case disambiguation
SELECT Nom IF (0 A)(*1C Nom BARRIER NPNH);
SELECT Acc IF (0 A)(*1C Acc BARRIER NPNH);
SELECT Dat IF (0 A)(*1C Dat BARRIER NPNH);
SELECT Gen IF (0 A)(*1C Gen BARRIER NPNH);

REMOVE Nom IF (0 A)(*1 N    BARRIER NPNH LINK NOT 0 Nom);
REMOVE Acc IF (0 A)(*1 N    BARRIER NPNH LINK NOT 0 Acc);
REMOVE Dat IF (0 A)(*1 N    BARRIER NPNH LINK NOT 0 Dat);
REMOVE Gen IF (0 A)(*1 N    BARRIER NPNH LINK NOT 0 Gen);


# Noun disambiguation
# -------------------

SELECT Msc IF (-1C (A Msc))(0 N);
SELECT Fem IF (-1C (A Fem))(0 N);
SELECT Neu IF (-1C (A Neu))(0 N);

SELECT Nom IF (-1C (A Nom))(0 N);
SELECT Acc IF (-1C (A Acc))(0 N);
SELECT Dat IF (-1C (A Dat))(0 N);
SELECT Gen IF (-1C (A Gen))(0 N);

SELECT Sg IF (-1C (A Sg))(0 N);
SELECT Pl IF (-1C (A Pl))(0 N);

# Poss disambiguation

REMOVE Msc IF (-1 N LINK NOT 0 Msc)(0 Poss);
REMOVE Fem IF (-1 N LINK NOT 0 Fem)(0 Poss);
REMOVE Neu IF (-1 N LINK NOT 0 Neu)(0 Poss);

REMOVE Msc IF (0 Poss)(*1 N BARRIER NPNH LINK NOT 0 Msc);
REMOVE Fem IF (0 Poss)(*1 N BARRIER NPNH LINK NOT 0 Fem);
REMOVE Neu IF (0 Poss)(*1 N BARRIER NPNH LINK NOT 0 Neu);


# PP disambiguation
# =================

SELECT Acc IF (*-1 ACCPREP BARRIER NOTACC);
SELECT Dat IF (*-1 DATPREP BARRIER NOTDAT);
REMOVE Gen IF (*-1 ACCDATPREP BARRIER NOTACCDAT);
REMOVE Nom IF (*-1 ACCDATPREP BARRIER NOTACCDAT);



# VP disambiguation
# =================

# Infinitive

SELECT Inf IF (-1 ("at"));




# Syntactic disambiguation
# ========================

REMOVE (@SPRED) IF (NOT *-1 (@SUBJ))(NOT *1 (@SUBJ));
REMOVE (@OBJ) IF (*-1 Pr BARRIER NPNH);
REMOVE (@IOBJ) IF (*-1 Pr BARRIER NPNH);

REMOVE (@P<) IF (*-1 BOS OR (N Acc) OR (N Dat) OR (N Nom) OR V OR CLB OR CS BARRIER Pr);

REMOVE (@N>) IF (*-1 Pr BARRIER NPNH);


# Case disambiguation

SELECT Acc IF (*-1 ACCPREP BARRIER NPNH)(0 (@P<));
SELECT Dat IF (*-1 DATPREP BARRIER NPNH)(0 (@P<));
REMOVE Nom IF (*-1 ACCGENPREP BARRIER NPNH)(0 (@P<));
REMOVE Dat IF (*-1 ACCGENPREP BARRIER NPNH)(0 (@P<));
REMOVE Nom IF (*-1 ACCDATPREP BARRIER NPNH)(0 (@P<));
REMOVE Gen IF (*-1 ACCDATPREP BARRIER NPNH)(0 (@P<));

