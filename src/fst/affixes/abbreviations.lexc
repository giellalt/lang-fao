!! Now splitting according to POS, and according to dot or not
! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

!! First collecting POS info, *-noun, *-adv, etc.
!! Also splitting when in doubt: -noun-adj => -noun and -adj
!! Then pointing to two contlexes, a dot-one and a non-dot-one.

! Noun or not
LEXICON ab-dot-trab ab-dot-noun-trab ; ! assuming noun
LEXICON ab-dot-trnumab  ab-dot-noun-trnumab ; ! assuming noun
LEXICON ab-trab ab-noun-trab ; ! assuming noun 
LEXICON ab-trnumab ab-noun-trnumab ; ! assuming noun

! The nouns
LEXICON ab-noun-trab    +ABBR+Gram/TAbbr:    ab-noun ;
LEXICON ab-noun-trnumab +ABBR+Gram/TNumAbbr: ab-noun ;
LEXICON ab-noun
         ab-nodot-noun ;
+Use/NG: ab-dot-noun   ;

! The adjectives
!LEXICON ab-adj-itrab +ABBR+Gram/IAbbr: ab-adj ;
!LEXICON ab-adj-trab  +ABBR+Gram/TAbbr: ab-adj ;
!LEXICON ab-adj 
!         ab-nodot-adj ;
!+Use/NG: ab-dot-adj   ;

! The adverbs
!LEXICON ab-adv-itrab   +ABBR+Gram/IAbbr:    ab-adv ;
!LEXICON ab-adv-trab    +ABBR+Gram/TAbbr:    ab-adv ;
!LEXICON ab-adv-numnoab  +ABBR+Gram/NoAbbr:   ab-adv ;
!LEXICON ab-adv
!         ab-nodot-adv ;
!+Use/NG: ab-dot-adv   ;

! The numerals

!! !Lexicons without final period
LEXICON ab-nodot-noun-itrab   +ABBR+Gram/IAbbr:    ab-nodot-noun ;
LEXICON ab-nodot-noun 
+N+Abbr:  nodot-infl ;

LEXICON ab-nodot-adj   !!= * __@CODE@__
+Adj+Abbr:  nodot-infl ;


LEXICON ab-nodot-num   !!= * __@CODE@__
+Num+Abbr:  nodot-infl ;

!! !Lexicons with final period

LEXICON ab-dot-noun-itrab   +ABBR+Gram/IAbbr:    ab-dot-noun ;
LEXICON ab-dot-noun-trab    +ABBR+Gram/TAbbr:    ab-dot-noun ;
LEXICON ab-dot-noun-trnumab +ABBR+Gram/TNumAbbr: ab-dot-noun ;
LEXICON ab-dot-noun   !!= * __@CODE@__  This is the lexicon for abbrs that must have a period.
+N+Abbr:  dot-infl ;

LEXICON ab-dot-adj-trab    +ABBR+Gram/TAbbr:    ab-dot-adj ;
LEXICON ab-dot-adj   !!= * __@CODE@__  This is the lexicon for abbrs that must have a period.
+Adj+Abbr:   dot-infl ;


LEXICON ab-dot-verb   !!= * __@CODE@__
+V+Abbr:  DOT ; ! Period.

LEXICON ab-nodot-verb   !!= * __@CODE@__
+V+Abbr:  # ; ! No period.
R- ;

LEXICON nodot-infl   !!= * __@CODE@__
# ;
R- ;

LEXICON dot-infl   !!= * __@CODE@__
DOT ;

LEXICON DOT   !!= * __@CODE@__ - Adds the dot to dotted abbreviations.

 +Use/-PMatch:%. # ; ! We need the dot here for regular fsts
! Split the abbr + full stop in two segments, but only when using pmatch:
< "@P.Pmatch.Loc@" {.} "+CLB":0 "+Use/PMatch":0 > # ;
! Make a regular ABBR analysis AND backtrack to find alternative analyses:
< "+Use/PMatch":0 "@P.Pmatch.Backtrack@" 0:%. > # ;

! =================

!LEXICON ab-dot-adv-itrab   +ABBR+Gram/IAbbr:     ab-dot-adv ;
!LEXICON ab-dot-adv-trab    +ABBR+Gram/TAbbr:     ab-dot-adv ;
!LEXICON ab-dot-adv-trnumab +ABBR+Gram/TNumAbbr:  ab-dot-adv ;
!LEXICON ab-dot-adv   !!= * __@CODE@__  This is the lexicon for abbrs that must have a period.
!+Adv+Abbr:  DOT ; ! Adv without case.

!LEXICON ab-dot-num-itrab +Num+ABBR+Gram/IAbbr: ab-dot-num ;
!LEXICON ab-dot-num-trab  +Num+ABBR+Gram/TAbbr: ab-dot-num ;
!LEXICON ab-dot-num   !!= * __@CODE@__  This is the lexicon for abbrs that must have a period.
!+Num+Abbr:  dot-infl ;

!LEXICON ab-dot-cc-itrab +CC+ABBR+Gram/IAbbr: ab-dot-cc ;
!LEXICON ab-dot-cc-trab  +CC+ABBR+Gram/TAbbr: ab-dot-cc ;
!LEXICON ab-dot-cc   !!= * __@CODE@__
!+CC+Abbr:  DOT ;


