!! Now splitting according to POS, and according to dot or not
! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

!! First collecting POS info, *-noun, *-adv, etc.
!! Also splitting when in doubt: -noun-adj => -noun and -adj
!! Then pointing to two contlexes, a dot-one and a non-dot-one.

LEXICON ab ! No POS, don't know what pos
ab-nodot ;
ab-dot ;

LEXICON ab-noun
ab-nodot-noun ;
ab-dot-noun ;

LEXICON ab-nodot ! default
+Abbr: # ;  ! no period, that is.

LEXICON ab-dot ! Default
+Abbr: DOT ;

LEXICON ab-nodot-noun ! The bulk
+Abbr+N: # ;  ! no period, that is.

LEXICON ab-dot-noun ! This is the lexicon for abbrs that must have a period.
+Abbr+N: DOT ;

!LEXICON ab-nodot-noun-itrab
!+Abbr+N: # ;

!LEXICON ab-adj
!ab-nodot-adj ;
!ab-dot-adj ;

!LEXICON ab-adv
!ab-nodot-adv ;
!ab-dot-adv ;

!LEXICON ab-num
!ab-nodot-num ;
!ab-dot-num;

! Here come POS and Case tags, and no period.


!LEXICON ab-nodot-adj
!+Abbr: # ;  ! no period, that is.
! +Abbr+A+Attr: # ;  ! no period, that is.
! +Abbr+A: # ;  ! no period, that is.
! +Abbr+A:%- R ; !^C^ TRY OUT THIS ONE

!LEXICON ab-nodot-adv
! +Abbr: # ;  ! no period, that is.
!  +Abbr+Adv: # ;      ! Adv without case, consider this.
! +Abbr+Adv+Attr: # ; ! no period, that is.
! +Abbr+Adv: # ;  ! no period, that is.
! +Abbr+Adv:%- R ; !^C^ TRY OUT THIS ONE

!  LEXICON ab-nodot-num
!+Abbr: # ;  ! no period, that is.
! +Abbr+Num: # ;  ! no period, that is.
! +Abbr+Num:%- R ; !^C^ TRY OUT THIS ONE


! Here come POS and Case tags, with the period added.


! The idea is that the nominal ones may have case, like e.g. P.E.N.

!LEXICON ab-dot-adj ! This is the lexicon for abbrs that must have a period.
! +Abbr:%. # ;
! +Abbr+A+Attr:%. # ;
! +Abbr+A:%. # ;

!LEXICON ab-dot-adv ! This is the lexicon for abbrs that must have a period.
!  +Abbr+Adv:%. # ;        ! Adv without case.

!LEXICON ab-dot-num ! This is the lexicon for abbrs that must have a period.
! +Abbr:%. # ;
! +Abbr+Num:%. # ;

!LEXICON ab-dot-cc
! +Abbr+CC:%. # ;

!LEXICON ab-verb
! ab-dot-verb ;
! ab-nodot-verb ;

!LEXICON ab-dot-verb
! +Abbr+V+TV+Imprt:%.   # ; ! Period.

!LEXICON ab-nodot-verb
! +Abbr+V+TV+Imprt:    # ; ! No period.
! # ;


LEXICON DOT   !!= * __@CODE@__ - Adds the dot to dotted abbreviations.

! This one should create a new backtrack-point before the dot, but no sub-reading:
< "@P.Pmatch.Backtrack@" 0:{.} > # ;
! This one should create an mwe sub-reading:
< "@P.Pmatch.Loc@" {.} "+PUNCT":0 "+Use/Disamb":0 > # ;

