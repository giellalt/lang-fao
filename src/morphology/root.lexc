! ========================================================================== !
!!               !!!Faroese morphological analyser
! ========================================================================== !

Multichar_Symbols  !!≈ !!!Definitions for @CODE@

                                       !!  !!Tags for POS			,
+N +V +A +Adv +Prop +Num                    !!≈ ; @CODE@ : Open POS's	,
+CC +CS +Interj +Pr +Pron +IM		    !!≈ ; @CODE@ : Closed POS's	,
+Pers +Det +Refl +Recipr +Poss +Dem		!!≈ ; @CODE@ : Pron types	,
+Nom +Acc +Gen +Dat					    !!≈ ; @CODE@ : Case			,
+Msc +Fem +Neu						    !!≈ ; @CODE@ : Gender		,
+Sg +Pl								    !!≈ ; @CODE@ : Number		,
+Def +Indef 						    !!≈ ; @CODE@ : Definiteness	,
+Cmp +Superl						    !!≈ ; @CODE@ : Comparison	,
+Prs +Prt							    !!≈ ; @CODE@ : Tense		,
+1Sg +2Sg +3Sg						    !!≈ ; @CODE@ : Person-Number,
+Inf +PrfPrc +PrsPrc +Sup +Imp +Sbj	    !!≈ ; @CODE@ : Verb forms	,
+Cmpnd								    !!≈ ; @CODE@ : Compound		,
+Abbr +ACR							    !!≈ ; @CODE@ : Abbreviations, acronyms ,
+CLB +PUNCT +LEFT +RIGHT			    !!≈ ; @CODE@ : Punctuation, parentheses
+Symbol !!≈ ; * @CODE@ : independent symbols in the text stream, like £, €, ©
+Err/Guess								!!≈ ; @CODE@ : Tag for Name Guesser component
+Err/Orth

+Der/heit  !! Derivation with -heit

+Ind +Pass +Interr +Ord
                                        !!  !!Semantic tags
+Sem/Sur +Sem/Mal +Sem/Fem +Sem/Plc +Sem/Org +Sem/Veh +Sem/Fem

                                        !!  !!Non-changing letters
 a2 g2 i2 j2 v2

+v1 +v2    !!≈ ; @CODE@ : different paradigms   ,

                                           !!  !!Triggers for Morphophonology
%^UUML %^IUML %^eIUML 						!!≈ ; @CODE@ : Umlaut types ,
%^W %^JI 									!!≈ ; @CODE@ : Cns changes ,
%^EPH %^OEA 								!!≈ ; @CODE@ : Epenthesis,  ,
%^GDEL %^GGDEL %^GVDEL %^VDEL %^JDEL %^RDEL	!!≈ ; @CODE@ : Cns deletion triggers,
%^EIO %^OA %^WVV %^EDH %^VSH				!!≈ ; @CODE@ : TODO ,
%^AB1 %^AB2 %^AB3 %^AB4 %^AB5 %^AB6 %^AB7	!!≈ ; @CODE@ : Ablaut series ,
%^aAB %^uAB 								!!≈ ; @CODE@ : More Ablaut ,
%^NGKK										!!≈ ; @CODE@ : NG to KK	,
%^PASS										!!≈ ; @CODE@ : todo ,
%>											!!≈ ; @CODE@ : Suffix boundary ,

+v1       !!≈ * __@CODE@__ - Paradigm identifier (e.g. gera+v1 = ger)
+v2       !!≈ * __@CODE@__ - Paradigm identifier (e.g. gera+v2 = gerar)


!!  !!Non-ascii letters, perhaps needed as multichar symbols
æ ø å 				  !!≈  @CODE@
á é í ó ú ý Á É Í Ó Ý !!≈  @CODE@
ä ö ü Ä Ö Ö			  !!≈  @CODE@

!! !Compounding tags

!! The tags are of the following form:
!! * __+CmpNP/xxx__ - Normative (N), Position (P), ie the tag describes what
!!                    position the tagged word can be in in a compound
!! * __+CmpN/xxx__  - Normative (N) __form__ ie the tag describes what
!!                    form the tagged word should use when making compounds
!! * __+Cmp/xxx__   - Descriptive compounding tags, ie tags that ''describes''
!!                    what form a word actually is using in a compound

!! This entry / word should be in the following position(s):

+CmpNP/All       !!≈ * __@CODE@__ - ... in all positions, __default__, this tag does not have to be written
+CmpNP/First     !!≈ * __@CODE@__ - ... only be first part in a compound or alone
+CmpNP/Pref      !!≈ * __@CODE@__ - ... only __first__ part in a compound, NEVER alone
+CmpNP/Last      !!≈ * __@CODE@__ - ... only be last part in a compound or alone
+CmpNP/Suff      !!≈ * __@CODE@__ - ... only __last__ part in a compound, NEVER alone
+CmpNP/None      !!≈ * __@CODE@__ - ... does not take part in compounds
+CmpNP/Only      !!≈ * __@CODE@__ - ... only be part of a compound, i.e. can never
                 !!                     be used alone, but can appear in any position

+Use/Disamb  !!≈ * @CODE@ = Use only in disambiguator/tokeniser analyser


!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised

!! Set flag for compounds
@P.Case.MscNom@    !!≈ | @CODE@ | fyrstiflokkur
@P.Case.MscObl@    !!≈ | @CODE@ | fyrstaflokk
@P.Case.FemNom@    !!≈ | @CODE@ | lítlasystir
@P.Case.FemObl@    !!≈ | @CODE@ | lítluusystur
@P.Case.Neu@    !!≈ | @CODE@ | breiðaskarð
@P.Case.Pl@    !!≈ | @CODE@ | fyrstuflokkar, lítlusystrar, breiðuskørð

!! Control flag values for compounds
@R.Case.MscNom@    !!≈ | @CODE@ | fyrstiflokkur
@R.Case.MscObl@    !!≈ | @CODE@ | fyrstaflokk
@R.Case.FemNom@    !!≈ | @CODE@ | lítlasystir
@R.Case.FemObl@    !!≈ | @CODE@ | lítluusystur
@R.Case.Neu@    !!≈ | @CODE@ | breiðaskarð
@R.Case.Pl@    !!≈ | @CODE@ | fyrstuflokkar, lítlusystrar, breiðuskørð

!! Control flag values for compounds
@U.Case.MscNom@    !!≈ | @CODE@ | fyrstiflokkur
@U.Case.MscObl@    !!≈ | @CODE@ | fyrstaflokk
@U.Case.FemNom@    !!≈ | @CODE@ | lítlasystir
@U.Case.FemObl@    !!≈ | @CODE@ | lítluusystur
@U.Case.Neu@    !!≈ | @CODE@ | breiðaskarð
@U.Case.Pl@    !!≈ | @CODE@ | fyrstuflokkar, lítlusystrar, breiðuskørð


 @P.Pmatch.Loc@     !!≈ | @CODE@ | Location in string used or parsed by hfst-pmatch
@P.Pmatch.Backtrack@ 


!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.


! ============ !
! Root lexicon !
! ============ !


LEXICON Root
!! !!!Lexicon @LEXNAME@
!! This is the beginning of everything. The __@LEXNAME@__ lexicon is reserved in the
!! LexC language, and must be the first lexicon defined.


Nouns ;
Shortnouns ; ! 1- and 2-letter nouns excluded from compounding
Propernouns ;
Adjectives ;
Verbs ;
Adverb ;
Conjunction ;
Subjunction ;
Interjection ;
Numeral ;
Determiner ;
Pronoun ;
Preposition ;
Punctuation ;
Symbols     ;
Abbreviation ;
Acronyms ;





LEXICON ENDLEX
!! !!!Lexicon @LEXNAME@
!! And this is the @LEXNAME@ of everything:
!! {{{
   @D.CmpOnly.FALSE@@D.CmpPref.TRUE@@D.NeedNoun.ON@ ENDLEX2 ; !!≈ @CODE@
   ! @D.Need3Part.ON@ # ; !3part
   !! }}}
   !! The {{@D.CmpOnly.FALSE@}} flag diacritic is ued to disallow words tagged
   !! with +CmpNP/Only to end here.
   !! The {{@D.NeedNoun.ON@}} flag diacritic is used to block illegal compounds.

LEXICON ENDLEX2
# ;

! @R.SpellRlx.ON@+Err/Spellrelax@C.SpellRlx@:@R.SpellRlx.ON@@C.SpellRlx@ ENDLEX3 ;
!  @D.SpellRlx.ON@@C.SpellRlx@                                            ENDLEX3 ;

! LEXICON ENDLEX3
! @R.SpaceCmp.ON@+Err/SpaceCmp@C.SpaceCmp@:@R.SpaceCmp.ON@@C.SpaceCmp@  # ;
!  @D.SpaceCmp.ON@@C.SpaceCmp@                                           # ;


! vim: set ft=xfst-lexc:
