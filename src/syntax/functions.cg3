#Distributed under the terms of the GNU General Public License version 2 
# or any later version.

# ==================================================================== #
#!!  S Y N T A C T I C   F U N C T I O N S   F O R   F A R O E S E
# ==================================================================== #
# ==================================================================== 

#!!  Sámi language technology project 2003-2014, University of Tromsø # 

#!! This file adds syntactic functions. 

# ========== #
# Delimiters #
# ========== #

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>";

#PARENTHESES = "<$(>" "<$)>" "<$[>" "<$]>" "<${>" "<$}>" "<$«>" "<$»>" ;

# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>); 
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

LIST N = N ;
LIST V = V ;
SET REAL-V = V ; # XXX
LIST A = A ;
LIST A* = A* ;
LIST Prop = Prop ;
LIST Adv = Adv ;
LIST Num = Num ;
LIST CC = CC ;
LIST CS = CS ;
LIST Interj = Interj ;
LIST ACR = ACR ;
LIST Pr = Pr ;
LIST Pron = Pron ;
LIST Pers = Pers ;
LIST Det = Det ;
LIST Dem = Dem ;
LIST Refl = Refl ;
LIST Recipr = Recipr ;
LIST Poss = Poss ;
LIST Interr = Interr ;
LIST IM = IM ;
LIST Arab = Arab ;

LIST Nom = Nom ;
LIST Acc = Acc ;
LIST Gen = Gen ;
LIST Dat = Dat ;

LIST Msc = Msc ;
LIST Fem = Fem ;
LIST Neu = Neu ;

LIST Sg = Sg ;
LIST Pl = Pl ;

LIST Def = Def ;
LIST Indef = Indef ;
LIST Cmp = Cmp ;
LIST Superl = Superl ;

LIST Prs = Prs ;
LIST Prt = Prt ;
LIST 1Sg = 1Sg ;
LIST 2Sg = 2Sg ;
LIST 3Sg = 3Sg ;
LIST Inf = Inf ;
LIST PrfPrc = PrfPrc ;
LIST PrsPrc = PrsPrc ;
LIST Ind = Ind ;
LIST Imp = Imp ;
LIST Sbj = Sbj ;

LIST Sup = Sup ;
LIST Cmpnd = Cmpnd ;
LIST CLB = CLB ;
LIST PUNCT = PUNCT ;
LIST LEFT = LEFT ;
LIST RIGHT = RIGHT ;
LIST Guess = Guess ;
LIST ABBR = ABBR Abbr ;

LIST Ord = Ord ;

LIST Sem/Fem = Sem/Fem ;
LIST Sem/Mal = Sem/Mal ;
LIST Sem/Plc = Sem/Plc ;
LIST Sem/Sur = Sem/Sur ;
LIST Sem/Org = Sem/Org ;
LIST Sem/Veh = Sem/Veh ;
LIST Sem/Hum = Sem/Hum ;

SET SEMTAGS = Sem/Fem OR Sem/Mal OR Sem/Plc OR Sem/Sur OR Sem/Org OR Sem/Veh ;

LIST Der/heit = Der/heit ;


LIST TAG = N V A Adv CC CS Interj Pr Pron Pers Det Refl Recipr Poss Nom Acc Gen
Dat Msc Fem Neu Sg Pl Def Indef Cmp Sup Prs Prt 1Sg 2Sg 3Sg Inf PrfPrc
PrsPrc Sup Imp CLB PUNCT LEFT RIGHT Sem/Fem Sem/Mal Sem/Plc Sem/Sur Sem/Org Sem/Veh Guess ;


LIST NAGD = Nom Acc Gen Dat ;
LIST AGD = Acc Gen Dat ;
LIST GENDER = Msc Fem Neu ;
LIST NUMBER = Sg Pl ;

SET NAGDNUMBERGENDER = (Msc Sg Nom) OR (Msc Sg Acc) OR (Msc Sg Gen) OR (Msc Sg Dat) OR (Msc Pl Nom) OR (Msc Pl Acc) OR (Msc Pl Gen) OR (Msc Pl Dat) OR (Fem Sg Nom) OR (Fem Sg Acc) OR (Fem Sg Gen) OR (Fem Sg Dat) OR (Fem Pl Nom) OR (Fem Pl Acc) OR (Fem Pl Gen) OR (Fem Pl Dat) OR (Neu Sg Nom) OR (Neu Sg Acc) OR (Neu Sg Gen) OR (Neu Sg Dat) OR (Neu Pl Nom) OR (Neu Pl Acc) OR (Neu Pl Gen) OR (Neu Pl Dat) ;


LIST GRADE-ADV = "eisini" "heldur" "næstan" ;





#!! !!Syntactic tags
# --------------

LIST @+FAUXV = @+FAUXV ;  	#!! * @+FAUXV : finite auxiliary verb 
		 					#!! ** ferte: Son ferte oaidnit ollislaš gova. - She must see the whole picture.
LIST @+FMAINV = @+FMAINV ;	#!! * @+FMAINV : finite main verb
							#!! ** oaidná: Son oaidná ollislaš gova. - She sees the whole picture	
LIST @-FAUXV = @-FAUXV ;	#!! * @-FAUXV : infinite auxiliary verb
							#!! ** sáhte: In sáhte gáhku borrat. - I cannot eat cake.	
LIST @-FMAINV = @-FMAINV ;	#!! * @-FMAINV : infinite main verb
							#!! ** oaidnit: Son ferte oaidnit ollislaš gova. - She must see the whole picture.
LIST @-FSUBJ> = @-FSUBJ> ;	#!! * @-FSUBJ> : Subject of infinite verb outside the verbal.
							#!! ** mu: Diet dáhpáhuvai mu dieđikeahttá. - It happened without me knowing about it.
LIST @-F<OBJ = @-F<OBJ ;	#!! * @-F<OBJ : Subject of infinite verb outside the verbal.
							#!! ** nuppi: Ulbmil lea oažžut nuppi boagustit. - The goal is to get the other one to laugh.
LIST @-FOBJ> = @-FOBJ> ;	#!! * @-FOBJ> : Object of infinite verb outside the verbal.
							#!! ** váldovuoittuid: Sii vurde váldovuoittuid fasket. - They waited to grab the main prizes.
LIST @SPRED<OBJ = @SPRED<OBJ ;	#!! * @SPRED<OBJ : Object of an subsject predicative. (some adjectives are transitive)
							  	#!! ** guliid: Mánát leat oažžulat guliid.
LIST @-FADVL = @-FADVL ; 	#!! * @-FADVL : Adverbial complement of infinite verb outside the verbal.
							#!! ** várrogasat: Dihkkadeaddji rávve skohtervuddjiid várrogasat mátkkoštit. - The roadman warns snowscooter drivers to drive carefully.
LIST @>ADVL = @>ADVL ; 	#!! * @>ADVL : Modifier of an adverbial to the right.
						#!! ** vaikko: doppe leat vaikko man ollu studeanttat.
LIST @ADVL< = @ADVL< ; 	#!! * @ADVL< : Komplement for adverbial.
						#!! ** vahkus: Son málesta guktii vahkus.
LIST @<ADVL = @<ADVL ;	#!! * @<ADVL : Adverbial after the main verb.
						#!! ** dás: Eanet dieđuid gávnnat dás.
LIST @ADVL> = @ADVL> ;	#!! * @ADVL> : Adverbial to the left of the main verb
						#!! ** viimmat: Dál de viimmat asttan lohkat reivve.
LIST @ADVL>CS = @ADVL>CS ;	#!! * @ADVL>CS : Adverbial modifying subjunction.
							#!! ** 'beare' pointing at 'danin go': Muhto dus ii leat riekti dearpat su beare danin go sáhtát.
LIST <hab> = <hab> ;	#!! * <hab> : Habitive, specifying an adverbial, e.g. @ADVL> <hab>
						#!! ** Máhtes: Máhtes lea beana.
LIST <ext> = <ext> ;	#!! * <ext> : Extencial, specifying an subject, e.g. @<SUBJ <ext>
						#!! ** beana: Máhtes lea beana.
LIST <logo> = <logo> ;	#!! * <logo> : logoforic pronouns, e.g. @>N <logo> (for MT)
LIST <cs> = <cs> ;	#!! * <cs> : 
LIST @>N = @>N ;      	#!! * @>N : Modifier of a noun to the right.
						#!! ** geavatlaš: Ráđđehussii lea geavatlaš politihkka deaŧalaš. - For the government, practical politics is important.
LIST @N< = @N< ;		#!! * @N< : Complement of noun to the left.
						#!! ** vihtta: Mun boađán diibmu vihtta.
LIST @>A = @>A ;		#!! * @>A : Modifier of an adjective to the right.
						#!! ** juohke: Seminára lágiduvvo juohke nuppi jagi.
LIST @P< = @P< ;		#!! * @P< : Complement of preposition.
						#!! ** soađi: Dat dáhpáhuvai maŋŋel soađi.
LIST @>P = @>P ;		#!! * @>P : Complement of postposition.
						#!! ** riegádeami: Seta riegádeami maŋŋel Áttán elii vel 800 jagi.
LIST @HNOUN = @HNOUN ;	#!! * @HNOUN : Stray noun in sentence fragment.
						#!! ** muittut: Fidnokurssa muittut.
LIST @INTERJ = @INTERJ ;	#!! * @INTERJ : Interjection.
							#!! ** Hei: Hei, boađe!
LIST @>Num = @>Num ;		#!! * @>Num : Attribute of numeral to the right.
						#!! ** dušše: Mun ledjen dušše guokte mánu doppe.
LIST @Pron< = @Pron< ;	#!! * @Pron< : Complement of pronoun to the left.
						#!! ** Birehiin: Moai Birehiin leimme doppe.
LIST @>Pron = @>Pron ;	#!! * @>Pron : Modifyer of pronoun to the right.
						#!! ** vaikko: Olmmoš sáhttá bargat vaikko maid.
LIST @Num< = @Num< ;	#!! * @Num< : Complement of numeral to the left.
						#!! ** girjjiin: Dat lea okta min buoremus girjjiin.
LIST @OBJ = @OBJ ;		#!! * @OBJ : Object, the verb is not in the sentence (ellipse)
LIST @<OBJ = @<OBJ ;	#!! * @<OBJ : Object, the verb is to the left.
						#!! ** gávtti: Son goarru gávtti.
LIST @OBJ> = @OBJ> ;	#!! * @OBJ> : Object, the verb is to the right.
						#!! ** filmma: Dán filmma leat Kárášjoga nuorat oaidnán.
LIST @OPRED = @OPRED ;	#!! * @OPRED : Object predicative, the verb is not in the sentence (ellipse).
LIST @<OPRED = @<OPRED ;	#!! * @<OPRED : Object predicative, the verb is to the left.
							#!! ** buriid: Son ráhkada gáhkuid hui buriid.
LIST @OPRED> = @OPRED> ;	#!! * @OPRED> : Object predicative, the verb is to the right.
							#!! ** dohkkemeahttumin: Son oinnii dohkkemeahttumin bargat ášši nu.
LIST @PCLE = @PCLE ;		#!! * @PCLE : Particle.
							#!! ** Amma: Amma mii eat leat máksán? - We have not paid, have we?
LIST @COMP-CS< = @COMP-CS< ;	#!! * @COMP-CS< : Complement of subjunction.
								#!! ** vejolaš: Dat šaddá nu buorre go vejolaš.
LIST @SPRED = @SPRED ;		#!! * @SPRED : Subject predicative, the verb is not in the sentence (ellipse).
LIST @<SPRED = @<SPRED ;		#!! * @<SPRED : Subject predicative, the verb is to the left.
							#!! ** árgabivttas: Ovdal lei gákti árgabivttas.
LIST @SPRED> = @SPRED> ;		#!! * @SPRED> : Subject predicative, the verb is to the left.
							#!! ** álbmogin: Sápmelaččaid historjá álbmogin lea duháhiid jagiid boaris.
LIST @SUBJ = @SUBJ ;		#!! * @SUBJ : Subject, the finite verb is not in the sentence (ellipse).
LIST @<SUBJ = @<SUBJ ;		#!! * @<SUBJ : Subject, the finite verb is to the left.
							#!! ** gákti: Ovdal lei gákti árgabivttas.
LIST @SUBJ> = @SUBJ> ;		#!! * @SUBJ> : Subject, the finite verb is to the right.
							#!! ** Son: Son lea mu oabbá. - Sheis my sister.
LIST @PPRED = @PPRED ;		#!! * @PPRED : Predicative for predicative.
LIST @APP = @APP ;			#!! * @APP : Apposition
LIST @APP-N< = @APP-N< ;	#!! * @APP-N< : Apposition to noun to the left.
							#!! ** oahpaheaddji: Oidnen Ánne, min oahpaheaddji.
LIST @APP-Pron< = @APP-Pron< ;	#!! * @APP-Pron< : Apposition to pronoun to the left.
								#!! ** boazodoalloáirasat: Ja moai boazodoalloáirasat áigguime vaikko guovttá joatkit barggu.
LIST @APP>Pron = @APP>Pron ;	#!! * @APP>Pron : Apposition to noun to the right.
LIST @APP-Num< = @APP-Num< ;	#!! * @APP-Num< : Apposition to numeral to the left.
LIST @APP-ADVL< = @APP-ADVL< ;	#!! * @APP-ADVL< : Apposition to adverbial to the left.
								#!! ** bearjadaga: Mun vuolggán ihttin, bearjadaga.
LIST @VOC = @VOC ;	#!! * @VOC : Vocative
					#!! ** Miss Turner : Bures boahtin deike, Miss Turner! - Welcome her, Miss Turner!
LIST @CVP = @CVP ;	#!! * @CVP : Conjunction or subjunction that conjoins finite verb phrases.
					#!! ** go : Leago guhkes áigi dassá go Máreha oidnet? - Is it a long time since you saw Máret?
LIST @CNP = @CNP ;	#!! * @CNP : Local conjunction or subjunction.
					#!! ** vai : Leago nieida vai bárdni? - Is it a girl or a boy?
LIST @CMPND = @CMPND ;	#!! * @CMPND
LIST @X = @X ;		#!! * @X : The function is unknown, e.g. because of that the word is unknown

LIST ADVL = @ADVL @ADVL> @ADVL-ine> @ADVL-ela> @<ADVL-ine @<ADVL-ela @ADVL< @<ADVL @>ADVL @-F<ADVL @-F<ADVL-ela @-F<ADVL-ine ;
SET SUBJ = @<SUBJ OR @SUBJ> OR @SUBJ ;
SET SPRED = @<SPRED OR @SPRED> OR @SPRED ;
SET OPRED = @<OPRED OR @OPRED> OR @OPRED ;
SET FOBJ = @-F<OBJ OR @-FOBJ> ;
SET FMAINV = @-FMAINV OR @+FMAINV OR (V @<OBJ) OR (V @N<) OR (V @A<) OR (V @<SUBJ) OR (V @<ADVL) ;
SET FAUXV = @-FAUXV OR @+FAUXV ;
LIST HAB-V-TAGS = Pl3 Sg3 ConNeg PrfPrc Inf ;

SET OBJ = (@<OBJ) OR (@OBJ>) OR (@OBJ) OR (@-F<OBJ) OR (@-FOBJ>) ;
LIST <OBJ = @-F<OBJ @<OBJ ;
LIST OBJ> = @OBJ> @-FOBJ> ;

SET <OBJ-OTHERS = <OBJ OR (Gen) OR (Nom) OR (Adv) ;
SET OBJ>-OTHERS = OBJ> OR (Gen) OR (Nom) OR (Adv) ;

SET SYN-V = V + SUBJ OR OBJ + V OR ADVL + V OR (V @N<) OR (V @A<) OR V + SPRED OR (V @COMP-CS<) ;



# Sets
# ====

SET WORD = N | V | A | Pr | Pron | Det | Adv | CC | CS | Interj | Num | ("\?") ;


# Noun sets


SET NounMscFem = (N Msc) OR (N Fem) ;
SET NounMscNeu = (N Msc) OR (N Neu) ;
SET NounFemNeu = (N Fem) OR (N Neu) ;

SET MscFem = Msc OR Fem ;
SET MscNeu = Msc OR Neu ;
SET FemNeu = Fem OR Neu ;

LIST 3PERS = "hann" "hon" "tað" ;

# Adjective sets

SET REALADJ = A OR A* ;


# Nominal sets

LIST NOMINALHEAD = N Num Pers Refl Recipr "Pron Interr" "Pron Indef" ;

LIST NorA = N A ;

LIST PRENAGR = Det A ;

LIST MIDJA = "miðja" ; # in the middle of - construction. More N in here, also bottle constr.

SET NOT-ACC = TAG - Acc ;


# Verb sets

LIST COPULA = "vera" "verða" ;

LIST HAVA = "hava" ;

LIST MODV = "kunna" "láta" "skula" "vilja" "munna" "mega" ;

SET AUX = COPULA OR HAVA OR MODV ;

LIST VFIN = Prs Prt Imp Sbj ;
LIST INDSBJ = Ind Sbj ;

LIST NONTHIRDV = 1Sg 2Sg 1Pl 2Pl ;

LIST VINFIN = Inf Sup PrfPrs PrsPrc ;


LIST DATV = "bjóða" "hýsa" "sleppa" "smakka" "takka" ; # "undirvísa" 
 # sleppa3 = sleppa manninum leysum
 
LIST DATPREPV = "liggja" "vera" "standa" "fiska" "vera"; # use only ACCPREPV
LIST ACCPREPV = "leggja" "fara" "renda" "koma" "liða" "seta" ;

LIST OBJPREDVERB = "kalla" "doypa" "nevna" "taka"  ;

LIST MOVEMENTVERB = "koma" "koyra" ;

SET TV = V - COPULA - MODV ;

# Noun-Verb sets

LIST THIRDSG = Sg 3Sg ;
LIST THIRDPL = Sg 3Pl ;
LIST THIRD = Sg 3Sg Pl 3Pl ;

# Number sets

SET NUMBERS = Num - ("eitt") - ("1") ;

# Preposition sets

LIST ACCPREP = "aftan" "aftanvert" "ábeint" "áraka" "foruttan" "gjøgnum" "hóast" "inntil" "ígjøgnum" "íkring" "kring" "niðan" "oman" "síðan" "umframt" "umhvørvis" "umkring" "báðumegin" "hasumegin" "hvørgumegin" "høgrumegin" "sínumegin" "skeivumegin" "somumegin" "vinstrumegin" "øðrumegin" "eystan" "norðan" "sunnan" "sum" "vestan" ;

LIST DATPREP = "hjá" "með" "aftrat" "afturat" "afturímóti" "andstøðis" "andsýnis" "frá" "mótvegis" "nær" "sambært" "viðvíkjandi" "úr" ; # úr?

LIST GENPREP =  "at" "av" "hjá" "móti" "um" "undan" "úr" ;
LIST ACCDATPREP = "í" "á" "undir" "yvir" "eftir" "fyri" "við" ;

LIST ACCGENPREP = "innan" "uttan" "millum" "til" "vegna" ;

LIST ACCDATGENPREP = "at" "av" "hjá" "móti" "um" "undan" "úr" ;



SET SOMEACCPREP = ACCPREP | ACCDATPREP | ACCGENPREP | ACCDATGENPREP ;
SET SOMEDATPREP = DATPREP | ACCDATPREP | ACCDATGENPREP ;
SET SOMEGENPREP = ACCGENPREP | ACCDATGENPREP ;
SET SOMEACCDATPREP = ACCDATPREP | ACCDATGENPREP ;

# Boundary sets

SET S-BOUNDARY = CS | Interr | (";") | (":") | BOS | EOS ;
SET S-BOUNDARY2 = CS | Interr | (";") | (":") | BOS | EOS | (@CVP) ;
SET SV-BOUNDARY = S-BOUNDARY OR Inf - FAUXV OR Sup OR FMAINV ;

# Complementary set



# Case sets

# Some case, but not...
SET NOTNOM = Dat | Gen | Acc ;
SET NOTDAT = Nom | Gen | Acc ;
SET NOTACC = Nom | Gen | Dat ;
SET NOTACCDAT = Nom | Gen ;
SET OBL = Acc | Dat | Gen ;

# Anything but the following case...
SET NOACC = WORD - Acc ;
SET NODAT = WORD - Dat ;
SET NOACCDAT = WORD - Acc - Dat ;


SET PRE-N =  A | Det | (N Gen) | Num | (Pron Gen) | CC ; # Det???

LIST COMMA = (",") ;
SET MARK =  COMMA | ("\\") | ("\;") ; #"

LIST PUNCT-LEFT = (PUNCT LEFT) ;
LIST PUNCT-RIGHT = (PUNCT RIGHT) ;
SET PRE-APP   = COMMA OR PUNCT-LEFT ;

SET WORDMARK = WORD | MARK ;

SET PRE-NP-HEAD = WORDMARK - PRE-N ;
SET NPNHA = WORDMARK - PRE-N - Adv ;
SET NOT-ADV = WORDMARK - Adv - CC ; # adding CC
SET NOT-PROP = WORDMARK - Prop - CC ;
SET LEX-ADV = Adv - (A*) ;
SET NOT-A = WORDMARK - A ;
SET NOT-CC = WORDMARK - CC ;
SET NOUNADJ = N | A ;

SET NP-MEMBER = PRE-N | N | Pron ;


LIST TIME-N = "sunnudagur" ;



#!! The set __NOT-NPMOD__ is used to find barriers between NPs.
#!! Typical usage: ... (*1 N BARRIER NPT-NPMOD) ...
#!! meaning: Scan to the first noun, ignoring anything that can be
#!! part of the noun phrase of that noun (i.e., "scan to the next NP head")

SET NOT-NPMOD     = WORD - PRE-NP-HEAD OR ABBR ;
# This is the previous NPNH (npnh) set.
# NOT-NPMOD  = "NOT-PRE-NP-HEAD"

SET NOT-NPMOD-ACC     = NOT-NPMOD - Acc OR ABBR ;
SET NOT-NPMOD-ACC-ADV     = NOT-NPMOD - Acc - Adv OR ABBR ;
# To be used in mappingrules, before the disambuation of Acc and Gen.

SET NOT-NPMODADV    = WORD - PRE-NP-HEAD - Adv  ;
# NOT-NPMODADV = "NOT-PRE-NP-HEAD-OR-ADV"
SET NOT-NPMODADV-INDEF   = WORD - PRE-NP-HEAD - Adv - Indef ;
## NOT-NPMODADVI = "     ...-OR-INDEF"
# Illative indir.obj.
# <== is this our NOT-NPMOD set?
SET NOT-NPMODCC   = WORD - PRE-NP-HEAD - COMMA - @CNP ;
SET NAPP     = WORD - PRE-APP ;

LIST SGPRON = (Pron Sg) ;
LIST PLPRON = (Pron Pl) ;


LIST N-SG-NOM = (N Sg Nom);
SET HEAD-N = N  ;
SET HEAD-N-NOM = (N Nom)  ;


SET NP = N OR A ;                      # anything that can take except numerals
SET NP-HEAD        = Pron OR HEAD-N  ;
SET NP-HEAD-SG     = SGPRON OR (N Sg) OR (A Sg)   - Dem ;
SET NP-HEAD-PL     = PLPRON OR (N Pl) OR (A Pl)   - Dem ;
SET NP-HEAD-SG-NOM = SGPRON + Nom OR (N Sg Nom) OR (A Sg Nom)   ;
SET NP-HEAD-PL-NOM = PLPRON + Nom OR (N Pl Nom) OR (A Pl Nom)   ;
SET NP-HEAD-NOM    = NP-HEAD-SG-NOM OR NP-HEAD-PL-NOM ;
SET NP-HEAD-ACC    = (Pron Acc) OR (N Acc) OR (A Acc)  ;
SET NP-HEAD-GEN    = (Pron Gen) OR (N Gen) OR (A Gen)   ;



# Semantic sets


LIST ABSTRACT = "ráð" "byráð" ;

LIST BAREPLURALS = "barn" "fólk" "bygdafólk" "konufólk" ;
# these words are usually plurals when used alone. All countable neuters?
## Tú sært barn standa.

# frå edited

LIST Sem/Adr = Sem/Adr ;
LIST Year_Date = Sem/Date Sem/Year ;
LIST Sem/Date = Sem/Date ;
LIST Sem/Year = Sem/Year ;

SET FIRSTNAME = Prop + Sem/Fem OR Prop + Sem/Mal ;



SET MscFem = Msc OR Fem ;
SET MscNeu = Msc OR Neu ;
SET FemNeu = Fem OR Neu ;

LIST Pot_HUMAN = Sem/Hum Sem/Mal (ant m) Sem/Fem  (ant f) Sem/Sur cog Pers ;


LIST NOT_HUMAN = "ruovdi" "nolla" "nulla" ; #to prevent habitive for these in locative

SET HUMAN = Pot_HUMAN - NOT_HUMAN ;

#!! * Sets for Morphosyntactic properties
# --------------------------

SET CARDINALS = Num - Ord ;



# Verb sets

SET MAIN-V = V - COPULA ;
SET NOT-VERB = WORD - V ;
SET VFIN-NOT-AUX = VFIN - AUX ;

# Number sets


LIST CRD = CRD ;
LIST @P< = @P< ;




         SECTION         #



MAP:interj (@INTERJ) TARGET Interj ;


MAP:p< (@P<) Gen (*-1 Pr BARRIER NOT-NPMOD)(NEGATE 1 Gen) ;
MAP:p< (@P<) Acc (*-1 Pr BARRIER NOT-NPMOD)(NEGATE 1 Acc) ;
MAP:p< (@P<) Dat (*-1 Pr BARRIER NOT-NPMOD)(NEGATE 1 Dat) ;

MAP:p<coor (@P<) Gen (-1 CRD OR COMMA LINK -1 @P<) ;
MAP:p<coor (@P<) Acc (-1 CRD OR COMMA LINK -1 @P<) ;
MAP:p<coor (@P<) Dat (-1 CRD OR COMMA LINK -1 @P<) ;

MAP:n<titel1 (@N<) TARGET ("jr") OR ("sr") (-1 Prop) ;















#!! * Border sets and their complements
# ---------------------------------


SET CP = (Pron Interr) ;


LIST BOUNDARYSYMBOLS =  "\;" ":" "-" "–" ;



SET BOC = S-BOUNDARY OR BOS ;
SET BOC-PUNCT = BOC - ("-") - ("–") ;
SET EOC = S-BOUNDARY OR EOS ;

SET NP-BOUNDARY = BOS OR EOS OR VFIN OR Inf OR Sup OR CS OR CP OR @CVP ;


SET ADVLCASE = Acc or Gen or Dat ; #!! ADLVCASE



#!! * Syntactic sets
# --------------

LIST ALLSYNTAG = (@+FAUXV) (@+FMAINV) (@-FAUXV) (@-FMAINV) (@-FSUBJ>)(@-FOBJ)(@-F<ADVL)(@-FADVL>)(@>A) (@>ADVL) (@ADVL<) (@<ADVL) (@ADVL>) (@ADVL) (@>N) (@APP) (@APP-N<) (@APP-Pron<) (@APP>Pron) (@APP-Num<) (@APP-ADVL<) (@VOC)(@CNP) (@CVP) (@P<) (@>P) (@HNOUN) (@INTERJ) (@Pron<) (@OBJ) (@OBJ>) (@<OBJ) (@OPRED) (@<OPRED) (@OPRED>) (@SPRED<OBJ) (@PCLE) (@COMP-CS<) (@N<) (@SPRED) (@<SPRED) (@SPRED>) (@PPRED) (@Num<) (@SUBJ) (@<SUBJ) (@SUBJ>) (@X);

LIST HEAD = @SUBJ> @<SUBJ @SUBJ @OBJ @OBJ> @<OBJ @ADVL @ADVL> @<ADVL @SPRED> @<SPRED @SPRED @OPRED> @<OPRED @OPRED @-FSUBJ> @-FOBJ> @-FADVL> @-FSPRED> @-F<SUBJ @-F<OBJ @-F<ADVL @-F<SPRED ;


SET NON-APP = ALLSYNTAG - (@APP);

#!! These were the set types.


         SECTION         #


#!! !!Numeral outside the sentence


#!!	* __ordHNOUN__	
MAP:NumHNOUN (@HNOUN) TARGET (ord) (-1 BOS) ;	
	#$ 4. Álbmotskuvlla ja oahpaheaddjiseminára gaskasaš áigi.




MAP:-FMAINV (@-FMAINV) TARGET Sup ;

MAP:IM (@IM) TARGET IM ;





	# Subjects - SUBJ



LIST PERS-TAGS = 1Sg 2Sg 3Sg Pl ;
















# Initials
# --------

LIST INITIAL = "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
        "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
        "á" "æ" "ø" "å" "ö" "ä" ;

LIST CAP-INITIAL = "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M"
        "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z"
        "Á" "Æ" "Ø" "Å" "Ö" "Ä" ;


#!! Finite verbs

MAP:FMAINV @+FMAINV TARGET VFIN ; # obviously first approximation
MAP:FMAINV @-FMAINV TARGET Inf ; # obviously first approximation


#!! !!Numeral outside the sentence


#!!	* __ordHNOUN__	
MAP:NumHNOUN (@HNOUN) TARGET (Ord) (-1 BOS) ;	
	#$ 4. Álbmotskuvlla ja oahpaheaddjiseminára gaskasaš áigi.


#!! * __n<titel1__ (@N<) for ("jr") or ("sr"); if first one to the left is Prop
MAP:n<titel1 (@N<) TARGET ("jr") OR ("sr") (-1 Prop) ;




#!! * __n<titel2__ (@N<) for INITIAL; if first one to the left is a noun, or if to the left of you is a single letter which is part of a noun conjunction ''bustávas e ja f gáibiduvvo''
MAP:n<titel2 (@N<) TARGET INITIAL ((-1 N) OR (-1 CC LINK -1 INITIAL LINK -1 N))(NEGATE 1 Prop OR Num OR INITIAL) ;



MAP:num> (@>N) TARGET Num + $$NAGD (1 N + $$NAGD ) ;

MAP:>a (@>A) TARGET GRADE-ADV (*1 A BARRIER NOT-NPMOD) ;

MAP:>adv (@>ADVL) TARGET GRADE-ADV (1 Adv) ;

MAP:>adv (@>N) TARGET GRADE-ADV (1 N) ;
MAP:>adv (@>N) TARGET GRADE-ADV (1 CC LINK 1 GRADE-ADV LINK 1 N) ;


MAP:pron< (@Pron<) TARGET $$NAGD (0 Refl LINK *-1 $$NAGD + Pers BARRIER S-BOUNDARY OR CC) ;
MAP:pron< (@N<) TARGET $$NAGD (0 Refl LINK *-1 $$NAGD + TIME-N BARRIER S-BOUNDARY OR CC) ;


MAP:app<n (@APP-N<) TARGET (Num Nom) IF (-1 (Prop Sem/Sur Nom) LINK -1 ("\("))(1 COMMA LINK 1 ("s") LINK 1 CARDINALS LINK 1 ("\)"));
	#$ (Simonsen 1959, s. 45)



MAP (@SUBJ>) TARGET Nom (*-1 BOS BARRIER WORD)(1 (":")) ;
MAP (@<SPRED) TARGET Nom (*-1 (":") BARRIER WORD)(*1 EOS BARRIER Nom) ;
	#$ Fáksa: 22242786


	# Subject predicatives - SPRED


#!! * __<spred__ (@<SPRED) for A Nom or N Nom if; the subject Nom is on the same side of copulas as you: on the right side of copulas
MAP:<spred (@<SPRED) TARGET (A Nom) OR (N Nom) IF (*-1 (N Nom) BARRIER NOT-A LINK -1 COPULA + FMAINV)(NEGATE -1 @<SPRED) ;
	#$ Girjji namma čujuha dasa ahte dološ myhtain leat sámit mánát.




MAP:spredSg> (@SPRED>) TARGET (Sg Nom) IF (1 (Sg Nom) OR Pron + Sg + Nom OR (Indef Nom) LINK 1 COPULA) ;
	#$ Mii mun lean?

	# Subjects - SUBJ



MAP:subj>Pers (@SUBJ>) TARGET $$PERS-TAGS + Nom IF ((*1 $$PERS-TAGS + VFIN BARRIER SV-BOUNDARY LINK *1 $$PERS-TAGS + VFIN BARRIER SV-BOUNDARY) OR (*1 Refl BARRIER NOT-ADV LINK *1 $$PERS-TAGS + VFIN BARRIER NOT-ADV)) ;
	#$ Moai Birehiin barggašeimme mánáidgárddis.
MAP:subj>Pers (@SUBJ>) TARGET (Sg1 Nom) (-1 CC LINK *2 (V Pl1) BARRIER NOT-ADV) ;
MAP:subj>Pers (@SUBJ>) TARGET (Sg1 Nom) (1 CC LINK *1 (N Pl) BARRIER NOT-NPMOD LINK *1 (V Pl1) BARRIER NOT-ADV) ;
#MAP:subj>Pers (@SUBJ>) TARGET (Sg1 Nom) (-1 CC LINK *2 (V Pl1) BARRIER NOT-ADV ;
	#$ Mii du namma lea?
	#$ Gii ..
	#% Lea go son Máret boahtán?



MAP:<subjPers (@<SUBJ) TARGET $$PERS-TAGS + Nom IF (*-1 $$PERS-TAGS + VFIN BARRIER NOT-ADV) ;

#!! * __subj>Sgnr1__ (@SUBJ>) for Nom Sg, including Indef Nom if; VFIN + 3Sg or Pl to the right (VFIN not allowed to the left)
#MAP:subj>cs (<cs> @SUBJ>) TARGET Interr + Nom IF (*1 VFIN + 3Sg OR VFIN + Pl BARRIER REAL-V OR S-BOUNDARY)(NEGATE *-1 VFIN + 3Sg BARRIER NOT-ADV(*-1 VFIN) ;


MAP:subj>Sgnr1 (@SUBJ>) TARGET (Nom Sg) OR (3Sg Nom) OR (Indef Nom) IF (*1 VFIN + 3Sg OR VFIN + Pl BARRIER REAL-V OR S-BOUNDARY)(NEGATE *-1 VFIN + 3Sg BARRIER NOT-ADV);
	#$ Niibi lea stális.
	#$ Girji lea Máreha.


#!! * __subj>Pl__ (@SUBJ>) for plural nominatives
MAP:subj>Pl (@SUBJ>) TARGET (Nom Pl) IF (*1 VFIN + Pl BARRIER REAL-V OR S-BOUNDARY) ;
	#$


#!! * __subj>Sg__ (@SUBJ>) for Nom Sg; if VFIN + 3Sg to the right.
MAP:subj>Sg (@SUBJ>) TARGET (Nom Sg) IF (*1 VFIN + 3Sg BARRIER REAL-V OR S-BOUNDARY OR COMMA);
	#$ Nuba áddjá árvala ahte eiseválddit galggaše bálkáhit baicce vuorrolohkkiid, vai rehkenasto vuorruid mearri maiddái, iige dušše dat mearri guliin mii goddo deanus.

#!! * __Sg<subj__ (@<SUBJ) for Nom Sg; if VFIN 3Sg or Du2 to the left (no HAB allowed to the left).
MAP:Sg<subj (@<SUBJ) TARGET (Nom Sg) IF (*-1 VFIN + 3Sg BARRIER S-BOUNDARY)(NEGATE *-1 <hab> BARRIER BOC) ;
	#$ Vuovssá goddá boanda.
	#$ Sin mielas lei dát hui givssálaš.
	#% Oppalaš hábmema strategiija mii galgá váikkuhit dasa ahte servodat šaddá buohkaide olahahttin, ja dasa ahte vealaheapmi eastaduvvo, lea maid deattuhuvvon.




MAP:subj>Coor1 (@SUBJ>) TARGET Nom IF (1 CC LINK *1 Nom BARRIER NOT-NPMOD LINK *1 VFIN + Pl  BARRIER NOT-ADV );

MAP:subjCoorTEST (@SUBJ>) TARGET Nom IF ((1 CC OR COMMA LINK *1 @SUBJ> BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @SUBJ>)) ;

MAP:subjCoorTEST (@<SUBJ) TARGET Nom IF ((1 CC OR COMMA LINK *1 @<SUBJ BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @<SUBJ)) ;

MAP:subjCoorTEST (@SUBJ>) TARGET Nom IF ((1 CC OR COMMA LINK *1 @SUBJ> BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @SUBJ>)) ;

MAP:subjCoorTEST (@<SUBJ) TARGET Nom IF ((1 CC OR COMMA LINK *1 @<SUBJ BARRIER NOT-NPMOD) OR (*-1 CC BARRIER NOT-NPMOD OR CC LINK -1 @<SUBJ)) ;

MAP:subj>Num (@SUBJ>) TARGET (Num Nom) (*1 (N Sg Gen) BARRIER NOT-A LINK *1 VFIN + Pl BARRIER NOT-ADV );
MAP:<subjNum (@<SUBJ) TARGET (Num Nom) (*1 (N Sg Gen) BARRIER NOT-A)(*-1 VFIN + Pl BARRIER Nom OR S-BOUNDARY) ;


MAP:subj>App (@SUBJ>) TARGET Nom IF (1 COMMA LINK **1 @APP-N< OR @APP-Pron< LINK 1 COMMA LINK 1 VFIN) ;
MAP:subj>App (@SUBJ>) TARGET (N Nom) OR (Pron Nom) (1 COMMA LINK *1 @APP-N< OR @APP-Pron< BARRIER NOT-NPMOD LINK *1 FMAINV) ;
	#$ Jovsset, su irgi, gii lei rehálaš olmmái ii ge hálidan heahppašuhttit su, áiggui earránit sus suoli.



MAP:>cc (@>CC) TARGET ("sihke")(*1 ("og") OR ("at")) ;
MAP:>cc (@>CC) TARGET ("juogo" Adv) OR ("jogo" Adv) (*1 ("dahje") BARRIER S-BOUNDARY) ;
MAP:advl>cs (@ADVL>CS) TARGET ("beare" Adv) (1 CS LINK *1 FMAINV) ;
	#$ Muhto dus ii leat riekti dearpat su beare danin go sáhtát.

LIST ADVLCASEAdv = Adv Pr  ;






	# Infinite object - FOBJ



#!! * __-fobj>__ (@-FOBJ>) for Acc if human with ADVL-case to the left and transitive infinitive OBJ to the right. First one to the right not allowed to be Acc though
MAP:-fobj> (@-FOBJ>) TARGET Acc (-1 ADVLCASEAdv + Sem/Hum)(1 (TV Inf @<OBJ) LINK NOT 1 Acc) ;
	#$ Eadni oahpaha nieidasis beaskka goarrut.




#!! * __V<advl__ (@<ADVL) if; finite mainverb found to the left. Not if a comma is found immediately to the left and a finite mainverb is located somewhere to the right of this comma.
MAP:V<advl (@<ADVL) TARGET ADVLCASEAdv (*-1 FMAINV BARRIER SV-BOUNDARY - (":"))(NEGATE -1 COMMA LINK *1 FMAINV BARRIER S-BOUNDARY) ;
	#$ Giellatekno álggahuvvui 1.8.2001 prošeaktan ráhkadit sámegiela grammatihkalaš analysa.
	#$ Dán filmma leat Kárášjoga nuorat oaidnán, eaige šat vuolgge sirkusii.
	#$ Eanet dieđuid gávnnat dáppe: www.denkulturelleskolesekken.no
	#% Vare livččet jogo galmmas dahje liekkas.



MAP:advl>cs (@ADVL>CS) TARGET Adv (*-1 BOC BARRIER NOT-ADV)(1 CS LINK *1 FMAINV) ;
	#$ Danne go ..
	#$ Nu guhká go ...

#!! * __<advlPoPr__ (@<ADVL) for Po or Pr; if mainverb to the left.
MAP:<advlPoPr (@<ADVL) TARGET Pr (*-1 FMAINV BARRIER SV-BOUNDARY) ;
#!! * __advlPoPr>__ (@<ADVL) for Po or Pr; if mainverb to the right.
MAP:advlPoPr> (@ADVL>) TARGET Pr (*1 FMAINV BARRIER SV-BOUNDARY) ;

#!! * __BOSPo>__ (@ADVL>) for Po; if trapped between BOS to the right and S-BOUNDARY OR COMMA to the left, because the main verb will then automatically be on your right side.






#!! * __advl>inbetween__ (@ADVL>) for Adv; if inbetween two sentenceboundaries where no mainverb is present.
MAP:advl>inbetween (@ADVL>) TARGET Adv (*-1 BOC BARRIER FMAINV)(*1 S-BOUNDARY BARRIER FMAINV)  ;
	#$ Son muitala maid ahte nu guhká go orohagat eai vuosttal mearkkaid, de sii lávejit juolludit mearkkaid ohcciide.
	#$ Dál de viimmat asttan čállit reivve.

#!! * __comma<advlEOS__ (@<ADVL) for Adv if; comma found to the left and the finite mainverb to the left of comma. To the right is the end of the sentence.
MAP:comma<advlEOS (@<ADVL) TARGET Adv (*-1 COMMA BARRIER V LINK *-1 FMAINV BARRIER S-BOUNDARY)(*1 EOS BARRIER FMAINV) ;
	#$ Guovdageainnu guovllut gal leat vel mu mielas sestojuvvon oalle bures dássážii, movt šat guhká.
	#$ De eai leat šat dušše tálat, muhto bustávat maid.

MAP:<advlØ (@<ADVL) TARGET Adv OR TIME-N (*-1 Nom BARRIER (":"))(*1 EOS BARRIER SV-BOUNDARY) ;
	#$ Maid mii dál vihtaniiguin?
	#$ Lákca vel alde!
	#$ Sámi dutkan ii leat dan dihte soaittáhagas válljejuvvon dutkansuorgi.
	#% Odne vai ihttin?
	#% Juoba ge dán áigodagas.
	#Comment: Dát doaibmá bures ellipsaide main lea HNOUN, muhto ferten gávdnat eará čovdosa.
	#$ Ođđa viessu boahtte jagi.



#!! * __cleanupPr__ (@ADVL) for Po: This rule tags all Pr:s as ADVL if they haven't gotten a tag somewhere along the way.
MAP:cleanupPr (@ADVL) TARGET Pr (0 Pr);
	#$
	#% Sámeskuvla šattai oktasaš deaivvadanbáikin hárvelohkosaš ja hádjánan lullisámi minoritehtii geaid ruovttut ledje Femundmárkkus gitta Davvi-Rátnui, - badjel 1000 km guhkkosaš guovlu.



	# Infinite subjects - FSUBJ

#!! * __-fsubj>asAcc__ (@-FSUBJ>) for HUMAN Acc; if there is a verb @<OBJ to your left
MAP:-fsubj> (@-FSUBJ>) TARGET HUMAN + Acc (*1 (V @<OBJ) BARRIER NOT-ADV );
	#$ Divtte bálvaleddjiidat ássat Gosenis!

#!! * __-f<obj__ (@-F<OBJ) for Acc if there is a transitive verb + SYN-V to your left
MAP:-f<obj (@-F<OBJ) TARGET Acc (*-1 (V TV) + SYN-V BARRIER REAL-V OR S-BOUNDARY) ;
	#$ Máret muitalii Máhte oaidnán guovžža.
	#$ Gurssa ulbmil lea oahppat goarrut Ivgu gávtti.
	#$ Dus lea vuoigatvuohta oažžut heivehuvvon oahpahusa.

#!! * __-fsubj>IV__ (@-FSUBJ>) for Acc; if there is an IV-verb acting as a @<OBJ to your right
MAP:-fsubj> (@-FSUBJ>) TARGET Acc (*1 (IV @<OBJ) BARRIER NOT-ADV );
	#$ Sii lohket fatnasa gopmánan.
	#$ Mii vurddiimet dálkki buorránit.

#!! * __-fsubj>IV__ (@-FSUBJ>) for Acc; if there is an TV-verb acting as a @<OBJ to your right followed by an Acc
MAP:-fsubj> (@-FSUBJ>) TARGET Acc (*1 (V @<OBJ) BARRIER NOT-ADV LINK *1 Acc BARRIER NOT-NPMOD) ;
	#$ Máhtte rábmui iežas vuoitit dan gilvvu.



#!! * __f<subj__ (@-F<SUBJ) for Nom if; (V @<OBJ) to the left.
MAP:f<subj (@-F<SUBJ) TARGET Nom (*-1 (V @<OBJ) BARRIER NOT-NPMODADV - @CNP) ;
	#$ Mii oaidnit vuoittuid beales leat elektruvnnalaš gálvvut hui bivnnuhat ja eai dábálaš bargobiergasat.
	#Comment: needs some more testing in another corpus



	# Predicatives - PPRED

MAP:<ppred (@<PPRED) TARGET (Pl Nom) (*-1 @<SPRED + Pl BARRIER NOT-ADV) ;
	#$ Mus leat gieđat nu galbmasat.
MAP:<ppred (@<PPRED) TARGET (Sg Nom) (*-1 @<SPRED + Sg BARRIER NOT-ADV) ;
	# Márehis lea oaivi bávččas.


	#$ Noađđespagáin leat dat geažit guokte golbma tumá guhku.
MAP:>a (@>A) TARGET (Num Acc) (1 TIME-N + (Sg Gen) LINK 1 A) ;
	#$ Arkiivaávdnasat galget sáddejuvvot go leat sullii 25-30 jagi boarrásat.
MAP:>a (@>A) TARGET TIME-N + Acc (-1 Num) (1 A) ;
	#$ Sápmelaččaid historjá álbmogin lea duháhiid jagiid boaris.







#!! * __Obj>__ (@OBJ>) for Acc; if there is a finite mainverb to the right in the clause. A really simple rule with no other restrictions..
MAP:Obj> (@OBJ>) TARGET Acc (*1 FMAINV BARRIER SV-BOUNDARY) ;
	#$ Dan duođaštit čállosat maid politihkkárat leat čálašan gieskat e-poasttain ja maid leat mediai suođđan.
	#$ Dán filmma leat Kárášjoga nuorat oaidnán, eaige šat vuolgge sirkusii.

#!! * __s-boun<obj__ (@<OBJ) for Acc; if sentenceboundary to your left and a transitive mainverb to the left futher to the left
MAP:s-boun<obj (@<OBJ) TARGET Acc - Num (*-1 S-BOUNDARY BARRIER FMAINV + TV LINK *-1 FMAINV + TV BARRIER SV-BOUNDARY) ;
	#$ Sii bukte skeaŋkkaid mánnái: golliid, suovvasiid ja myrra.
	#$ Iige láhka lihkahala vuoigatvuođaid mat vuođđuduvvet eará vuđđosii, ovdamearkan dakkáriid mat vuođđuduvvet dahkkojuvvon šiehtadussii.






MAP:>advl (@<ADVL) TARGET Arab IF (*-1 FMAINV BARRIER S-BOUNDARY) ;
	#$ Stáhtabušeahta rámmat leat lassánan 5 % .

#!!	* __NInfheadliner__	
MAP:NInfheadliner (@HNOUN) TARGET Nom (NEGATE 0 VFIN)(1 Inf LINK NEGATE *1 WORD) ;	
	#$ Áigi soabadit.

#!!	* __Superlheadliner__	
MAP:Superlheadliner (@HNOUN) TARGET Superl (NEGATE 0 VFIN)(*-1 BOS BARRIER WORD)(1 CS LINK 1 VFIN LINK NEGATE *1 VFIN) ;	
	#$ Stuorimus maid sáhttá oažžut.



#!! !!SUBJ MAPPING - leftovers
MAP:<subj (@<SUBJ) TARGET NP-HEAD-NOM - A  OR (Num Nom) (*-1 FMAINV BARRIER (":") OR S-BOUNDARY) ;

#!! * __subj>ifV__ (@SUBJ>) for NP-HEAD-NOM, DUPRON or (Num Nom) if; a finite mainverb is found to the right. This is a cleanup rule for subjects
MAP:subj>ifV (@SUBJ>) TARGET NP-HEAD-NOM - A OR (Num Nom) (*1 FMAINV BARRIER (":"))	 ;
	#$ Lean ieš oaidnán dange.
	#$ Mii Sámedikki nuoraidpolitihkalaš lávdegottis (SNPL) áigut čalmmustahttit árbevirolaš ja ođđaáigásaš sámi ealáhusaid.
	#% Ávdugasat sii geat moraštit.




#!! !!OBJ MAPPING - leftovers
MAP:<obj (@<OBJ) TARGET NP-HEAD-ACC (*-1 FMAINV BARRIER (":") OR S-BOUNDARY) ;
MAP:obj> (@OBJ>) TARGET NP-HEAD-ACC (*1 FMAINV BARRIER (":"))(NEGATE *-1 Interj BARRIER NOT-NPMOD) ;

#!! !!<logo> MAPPING for MT - experimental

ADD:logo1 (<logo>) TARGET Pers + Pl (0 Gen OR Acc LINK *-1 VFIN + Pl) ;

#!! !!HNOUN MAPPING

MAP:hnounNom (@HNOUN) TARGET NP-HEAD-NOM - A OR (Num Nom) 
(NEGATE *0 V BARRIER (":"))(NEGATE *-1 PUNCT BARRIER (":") LINK -1 WORD) 
;

MAP:hnounNom (@HNOUN) TARGET A OR (Num Nom) (*-1 BOS BARRIER WORD)(*1 EOS BARRIER WORD) ;


MAP:HNOUN<advl (@<SPRED) TARGET Sem/Adr (-1 (":") LINK -1 Nom) ;
	#$ Fiskes, rukses, alit, ruoná ja muđui buotlágaš ivnnit.
	#$ Bargolávdegotti bargu: Álgobargu lei čielggadit min mandáhta.

MAP:hnounAdvl (@HNOUN) TARGET ADVLCASE OR Acc (NEGATE *0 REAL-V OR @HNOUN) ;
	#$ Juoba ge dán áigodagas.
MAP:hnounInterj (@HNOUN) TARGET Acc (*-1 Interj BARRIER NOT-NPMOD) ;

#!!	* __ADVLheadliner__	
MAP:ADVLheadliner (@ADVL>) TARGET ADVLCASE  (*1 @HNOUN) ;	
	#$ Vuosttaš geasi nissonolmmoš bajimusas.



MAP:HNOUNn< (@N<) TARGET ADVLCASEAdv (-1 CRD LINK -1 @N<)(1 EOS) ;
MAP:HNOUN<advl (@<ADVL) TARGET ADVLCASEAdv (*-1 @HNOUN BARRIER CRD OR (":")) ;
MAP:advl>HNOUN (@ADVL>) TARGET ADVLCASEAdv (*1 @HNOUN BARRIER CRD OR (":")) ;
MAP:HNOUN<obj (@<OBJ) TARGET Acc (*-1 @HNOUN) ;
	#% Birasgáhttenlihkadus ja álgoálbmogat - ovttasbargit vai vuostálágaid?
MAP:obj>HNOUN (@OBJ>) TARGET Acc (*1 @HNOUN) ;
MAP:HNOUN<spred1 (@<SPRED) TARGET (A Nom) (*-1 @HNOUN) ;
	#$ Dii guoktilaččat!
MAP:spred>HNOUN (@SPRED>) TARGET (A Nom) (*1 @HNOUN) ;
MAP:HNOUN<spred2 (@<SPRED) TARGET (A Nom) OR (N Nom) (*-1 PUNCT BARRIER REAL-V LINK *-1 @HNOUN) ;
	#$ Birasgáhttenlihkadus ja álgoálbmogat – ovttasbargit vai vuostálagaid?

MAP:HNOUNcoor (@HNOUN) TARGET N (-1 @CNP LINK -1 @HNOUN) ;
	#$ Oslos ja Londonis.

MAP (@ADVL) TARGET Adv (-1 BOS) ;
#!! * __@<ADVLcoor__ (@<ADVL) for ADVLCASEAdv if @CNP to the left and ADVL to the left of it
MAP:@<ADVLcoor (@<ADVL) TARGET ADVLCASEAdv (-1 @CNP LINK -1 ADVLCASEAdv) ;
	#$ Odne vai ihttin?

	#$ Báhpaeamit, Margrethe Wiig, gii lei gasku giellamoivvi, ráhkadii iežas sárgumiiguin sámegiela Áppesa, mii lei stuorra ávkin sámegiela oahpahusas.



#!! ! __missingX__ adds @X to all missings
MAP:missingX (@X) TARGET (?) ;

AFTER-SECTIONS

REMOVE:WORD WORD - ALLSYNTAG ;



#!! ! __therestX__ adds @X to all what is left, often errouneus disambiguated forms

MAP:leftoversX (@X) TARGET WORD ;

#!! ! __smeRemove__ removes the language tags <sma>, <sme>,  etc, before proceeding to the dep file.

SUBSTITUTE:sjeRemove (<sje>) (*) TARGET (<sje>) ;
SUBSTITUTE:smaRemove (<sma>) (*) TARGET (<sma>) ;
SUBSTITUTE:smeRemove (<sme>) (*) TARGET (<sme>) ;
SUBSTITUTE:smjRemove (<smj>) (*) TARGET (<smj>) ;
SUBSTITUTE:smnRemove (<smn>) (*) TARGET (<smn>) ;

#MT RULES for sme-sma
#SUBSTITUTE ("váldit" V) ("váldit2" V) ("váldit" V) (*1 ("vuostá" Adv) BARRIER SV-BOUNDARY OR REAL-V) ;
#REMCOHORT TARGET ("vuostá" Adv) (*-1 ("váldit2") BARRIER SV-BOUNDARY OR REAL-V) ;



#!! !!For Apertium:
#!! The analysis give double analysis because of optional semtags. We go for the one with semtag.


SELECT SEMTAGS + N ;
SELECT SUB:1 SEMTAGS + N ; #For Apertium
SELECT SUB:2 SEMTAGS + N ; #For Apertium
SELECT (cog) OR (top) OR (ant) ; #For Apertium

SUBSTITUTE (adv subqst ←cs→ @ADVL-ela→) (adv @ADVLcs-ela→) TARGET (adv subqst ←cs→ @ADVL-ela→) ; #Apertium
SUBSTITUTE (adv subqst ←cs→ @ADVL-ine→) (adv @ADVLcs-ine→) TARGET (adv subqst ←cs→ @ADVL-ine→) ; #Apertium
SUBSTITUTE (adv subqst @ADVL-ela→) (adv @ADVLqst-ela→) TARGET (adv subqst @ADVL-ela→) ; #Apertium
SUBSTITUTE (adv subqst @ADVL-ine→) (adv @ADVLqst-ine→) TARGET (adv subqst @ADVL-ine→) ; #Apertium
SUBSTITUTE (←hab→ @←ADVL) (←hab→ @←ADVLhab) TARGET (←hab→ @←ADVL) ; #Apertium
SUBSTITUTE (←hab→ @ADVL→) (←hab→ @ADVLhab→) TARGET (←hab→ @ADVL→) ; #Apertium
SUBSTITUTE (←ext→ @←SUBJ) (←ext→ @←SUBJext) TARGET (←ext→ @←SUBJ) ; #Apertium


#SUBSTITUTE (sem_year num) (num sem_year) ;
#SUBSTITUTE:apertium-unsubstitute (←vdic→) (*) TARGET (←vdic→) ;

SUBSTITUTE:apertium-unhide-derivtags (ex_vblex) (vblex) TARGET (ex_vblex) ;
SUBSTITUTE:apertium-unhide-derivtags SUB:1 (ex_vblex) (vblex) TARGET (ex_vblex) ;
SUBSTITUTE:apertium-unhide-derivtags SUB:2 (ex_vblex) (vblex) TARGET (ex_vblex) ;
SUBSTITUTE:apertium-unhide-derivtags SUB:3 (ex_vblex) (vblex) TARGET (ex_vblex) ;
SUBSTITUTE:apertium-unhide-derivtags (ex_adj) (adj) TARGET (ex_adj) ;
SUBSTITUTE:apertium-unhide-derivtags SUB:1 (ex_adj) (adj) TARGET (ex_adj) ;
SUBSTITUTE:apertium-unhide-derivtags (ex_n) (n) TARGET (ex_n) ;
SUBSTITUTE:apertium-unhide-derivtags SUB:1  (ex_n) (n) TARGET (ex_n) ;
SUBSTITUTE:apertium-unhide-derivtags (ex_tv) (tv) TARGET (ex_tv) ;
SUBSTITUTE:apertium-unhide-derivtags SUB:1  (ex_tv) (tv) TARGET (ex_tv) ;
SUBSTITUTE:apertium-unhide-derivtags (ex_iv) (iv) TARGET (ex_iv) ;
SUBSTITUTE:apertium-unhide-derivtags SUB:1  (ex_iv) (iv) TARGET (ex_iv) ;
#SUBSTITUTE:apertium-change-order (Num Sem/Year Sg) (Num Sg) TARGET (Num Sem/Year Sg) ;
#SUBSTITUTE:apertium-change-order (Sem/Year Num Sg) (num sg) TARGET (Sem/Year Num Sg) ;

	#=====#
      END #
	#=====#


	#=====#
          END #
	#=====#

