


# ===================== #
# Faroese syntaxtic functions #
# ===================== #


# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<¶>";



# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>); 
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

LIST N = N ;
LIST V = V ;
LIST A = A ;
LIST A* = A* ;
LIST Prop = Prop ;
LIST Adv = Adv ;
LIST Num = Num ;
LIST CC = CC ;
LIST CS = CS ;
LIST Interj = Interj ;
LIST Abbr = Abbr ;
LIST ACR = ACR ;
LIST Pr = Pr ;
LIST Pron = Pron ;
LIST Pers = Pers ;
LIST Det = Det ;
LIST Dem = Dem ;
LIST Refl = Refl ;
LIST Recipr = Recipr ;
LIST Poss = Poss ;
LIST Interr = Interr ;
LIST IM = IM ;

LIST Nom = Nom ;
LIST Acc = Acc ;
LIST Gen = Gen ;
LIST Dat = Dat ;
LIST Msc = Msc ;
LIST Fem = Fem ;
LIST Neu = Neu ;
LIST Sg = Sg ;
LIST Pl = Pl ;
LIST Def = Def ;
LIST Indef = Indef ;
LIST Cmp = Cmp ;
LIST Superl = Superl ;
LIST Prs = Prs ;
LIST Prt = Prt ;
LIST 1Sg = 1Sg ;
LIST 2Sg = 2Sg ;
LIST 3Sg = 3Sg ;
LIST Inf = Inf ;
LIST PrfPrc = PrfPrc ;
LIST PrsPrc = PrsPrc ;
LIST Ind = Ind ;
LIST Imp = Imp ;
LIST Sbj = Sbj ;
LIST Sup = Sup ;
LIST Cmpnd = Cmpnd ;
LIST CLB = CLB ;
LIST PUNCT = PUNCT ;
LIST LEFT = LEFT ;
LIST RIGHT = RIGHT ;
LIST Guess = Guess ;

LIST Sem/Fem = Sem/Fem ;
LIST Sem/Mal = Sem/Mal ;
LIST Sem/Plc = Sem/Plc ;
LIST Sem/Sur = Sem/Sur ;
LIST Sem/Org = Sem/Org ;
LIST Sem/Veh = Sem/Veh ;


LIST TAG = N V A Adv CC CS Interj Pr Pron Pers Det Refl Recipr Poss Nom Acc Gen
Dat Msc Fem Neu Sg Pl Def Indef Cmp Sup Prs Prt 1Sg 2Sg 3Sg Inf PrfPrc
PrsPrc Sup Imp CLB PUNCT LEFT RIGHT Sem/Fem Sem/Mal Sem/Plc Sem/Sur Sem/Org Sem/Veh Guess ;


LIST NAGD = Nom Acc Gen Dat ;
LIST AGD = Acc Gen Dat ;
LIST GENDER = Msc Fem Neu ;
LIST NUMBER = Sg Pl ;
SET NAGDNUMBERGENDER = (Msc Sg Nom) OR (Msc Sg Acc) OR (Msc Sg Gen) OR (Msc Sg Dat) OR (Msc Pl Nom) OR (Msc Pl Acc) OR (Msc Pl Gen) OR (Msc Pl Dat) OR (Fem Sg Nom) OR (Fem Sg Acc) OR (Fem Sg Gen) OR (Fem Sg Dat) OR (Fem Pl Nom) OR (Fem Pl Acc) OR (Fem Pl Gen) OR (Fem Pl Dat) OR (Neu Sg Nom) OR (Neu Sg Acc) OR (Neu Sg Gen) OR (Neu Sg Dat) OR (Neu Pl Nom) OR (Neu Pl Acc) OR (Neu Pl Gen) OR (Neu Pl Dat) ;


# Sets
# ====

SET WORD = N | V | A | Pr | Pron | Det | Adv | CC | CS | Interj | Num | ("\?") ;


# Noun sets


SET NounMscFem = (N Msc) OR (N Fem) ;
SET NounMscNeu = (N Msc) OR (N Neu) ;
SET NounFemNeu = (N Fem) OR (N Neu) ;

SET MscFem = Msc OR Fem ;
SET MscNeu = Msc OR Neu ;
SET FemNeu = Fem OR Neu ;

LIST 3PERS = "hann" "hon" "tað" ;

# Adjective sets

SET REALADJ = A OR A* ;


# Nominal sets

LIST NOMINALHEAD = N Num Pers Refl Recipr "Pron Interr" "Pron Indef" ;

LIST NorA = N A ;

LIST PRENAGR = Det A ;

LIST MIDJA = "miðja" ; # in the middle of - construction. More N in here, also bottle constr.

SET NOT-ACC = TAG - Acc ;


# Verb sets

LIST COPULA = "vera" "verða" ;

LIST HAVA = "hava" ;

LIST MODV = "kunna" "láta" "skula" "vilja" "munna" "mega" ;

SET AUX = COPULA OR HAVA OR MODV ;

LIST VFIN = Prs Prt Imp Sbj ;
LIST INDSBJ = Ind Sbj ;
#LIST Ind = Prs Prt ;

LIST NONTHIRDV = 1Sg 2Sg 1Pl 2Pl ;

LIST VINFIN = Inf Sup PrfPrs PrsPrc ;


LIST DATV = "bjóða" "hýsa" "sleppa" "smakka" "takka" ; # "undirvísa" 
 # sleppa3 = sleppa manninum leysum
 
LIST DATPREPV = "liggja" "vera" "standa" "fiska" "vera"; # use only ACCPREPV
LIST ACCPREPV = "leggja" "fara" "renda" "koma" "liða" "seta" ;

LIST OBJPREDVERB = "kalla" "doypa" "nevna" "taka"  ;

LIST MOVEMENTVERB = "koma" "koyra" ;

SET TV = V - COPULA - MODV ;

# Noun-Verb sets

LIST THIRDSG = Sg 3Sg ;
LIST THIRDPL = Sg 3Pl ;
LIST THIRD = Sg 3Sg Pl 3Pl ;

# Number sets

SET NUMBERS = Num - ("eitt") - ("1") ;

# Preposition sets

LIST ACCPREP = "aftan" "aftanvert" "ábeint" "áraka" "foruttan" "gjøgnum" "hóast" "inntil" "ígjøgnum" "íkring" "kring" "niðan" "oman" "síðan" "umframt" "umhvørvis" "umkring" "báðumegin" "hasumegin" "hvørgumegin" "høgrumegin" "sínumegin" "skeivumegin" "somumegin" "vinstrumegin" "øðrumegin" "eystan" "norðan" "sunnan" "sum" "vestan" ;

LIST DATPREP = "hjá" "með" "aftrat" "afturat" "afturímóti" "andstøðis" "andsýnis" "frá" "mótvegis" "nær" "sambært" "viðvíkjandi" "úr" ; # úr?

LIST ACCDATPREP = "í" "á" "undir" "yvir" "eftir" "fyri" "við" ;

LIST ACCGENPREP = "innan" "uttan" "millum" "til" "vegna" ;

LIST ACCDATGENPREP = "at" "av" "hjá" "móti" "um" "undan" "úr" ;


SET SOMEACCPREP = ACCPREP | ACCDATPREP | ACCGENPREP | ACCDATGENPREP ;

SET SOMEDATPREP = DATPREP | ACCDATPREP | ACCDATGENPREP ;

SET SOMEGENPREP = ACCGENPREP | ACCDATGENPREP ;

SET SOMEACCDATPREP = ACCDATPREP | ACCDATGENPREP ;

# Boundary sets

SET S-BOUNDARY = CS | Interr | (";") | (":") | BOS | EOS ;
SET S-BOUNDARY2 = CS | Interr | (";") | (":") | BOS | EOS | (@CVP) ;

# Complementary set



# Case sets

# Some case, but not...
SET NOTNOM = Dat | Gen | Acc ;
SET NOTDAT = Nom | Gen | Acc ;
SET NOTACC = Nom | Gen | Dat ;
SET NOTACCDAT = Nom | Gen ;
SET OBL = Acc | Dat | Gen ;

# Anything but the following case...
SET NOACC = WORD - Acc ;
SET NODAT = WORD - Dat ;
SET NOACCDAT = WORD - Acc - Dat ;


#SET NO

SET PRE-N =  A | Det | (N Gen) | Num | (Pron Gen) | CC ; # Det???


LIST COMMA = (",") ;
SET MARK =  COMMA | ("\\") | ("\;") ; #"

LIST PUNCT-LEFT = (PUNCT LEFT) ;
LIST PUNCT-RIGHT = (PUNCT RIGHT) ;
SET PRE-APP   = COMMA OR PUNCT-LEFT ;


SET WORDMARK = WORD | MARK ;

SET NPNH = WORDMARK - PRE-N ;
SET NPNHA = WORDMARK - PRE-N - Adv ;
SET NOT-ADV = WORDMARK - Adv - CC ; # adding CC
SET NOT-PROP = WORDMARK - Prop - CC ;
SET LEX-ADV = Adv - (A*) ;
SET NOT-A = WORDMARK - A ;
SET NOT-CC = WORDMARK - CC ;
SET NOUNADJ = N | A ;

SET NP-MEMBER = PRE-N | N | Pron ;

LIST TIME = "sunnudagur" ;



# Semantic sets


LIST ABSTRACT = "ráð" "byráð" ;

LIST BAREPLURALS = "barn" "fólk" "bygdafólk" "konufólk" ;
# these words are usually plurals when used alone. All countable neuters?
## Tú sært barn standa.




# Syntactic disambiguation
# ========================


# Syntax tags

LIST @<SUBJ = @<SUBJ ;
LIST @SUBJ> = @SUBJ> ;
LIST @<tSUBJ = @<tSUBJ ;
LIST @tSUBJ> = @tSUBJ> ;
LIST @-FSUBJ> = @-FSUBJ> ;
LIST @<OBJ = @<OBJ ;
LIST @<IOBJ = @<IOBJ ;
LIST @OBJ> = @OBJ> ;
LIST @IOBJ> = @IOBJ> ;
LIST @>N = @>N ;
LIST @N< = @N< ;
LIST @>A = @>A ;
LIST @A< = @A< ;
LIST @IM = @IM ;
LIST @<SPRED = @<SPRED ;
LIST @SPRED> = @SPRED> ;
LIST @<OPRED = @<OPRED ;
LIST @OPRED> = @OPRED> ;
LIST @+FAUXV = @+FAUXV ;
LIST @-FAUXV = @-FAUXV ;
LIST @+FMAINV = @+FMAINV ;
LIST @-FMAINV = @-FMAINV ;
LIST @-F<ADVL = @-F<ADVL ;
LIST @<ADVL = @<ADVL ;
LIST @ADVL> = @ADVL> ;
LIST @ADVL = @ADVL ;
LIST @P< = @P< ;
LIST @CNP = @CNP ;
LIST @CVP = @CVP ;
LIST @>CS = @>CS ;
LIST @APP = @APP ;
LIST @HNOUN = @HNOUN ;
LIST @Pron< = @Pron< ;

LIST @X = @X ;

LIST SYNTAG = (@CNP) (@CVP) (@<SUBJ) (@SUBJ>) (@-FSUBJ>) (@<OBJ) (@OBJ>) (@<IOBJ) (@IOBJ>)  (@>A) (@A<) (@>N)  (@N<)  (@<SPRED) (@SPRED>) (@<OPRED) (@OPRED>) (@+FAUXV) (@+FMAINV) (@-FAUXV) (@-FMAINV) (@ADVL) (@-F<ADVL) (@<ADVL) (@ADVL>) (@P<) (@APP) (@HNOUN) ;

SET SUBJ =  (@<SUBJ) OR (@SUBJ>) OR (@-FSUBJ>) ;


# ======== #
###SECTION  #
# ======== #


MAP (@IM) TARGET IM ;
MAP (@INTERJ) TARGET Interj ;  
MAP:r67 (@CNP @CVP) TARGET CC ;
ADD:r68 (@CVP) TARGET CS ;
MAP (@>CS) TARGET ("ein" Det Neu Sg Gen) IF (1 ("og" CS));


MAP:Attr1 (@>N) TARGET Prop IF (1 Sem/Sur) ;
MAP:Attr2 (@>N) TARGET Prop IF (1 Sem/Mal OR Sem/Fem)(2 Sem/Sur) ;
MAP:Attr3 (@>N) TARGET Prop IF (1 Sem/Mal OR Sem/Fem)(2 CC)(3 Sem/Mal OR Sem/Fem)(4 Sem/Sur) ;

# np

MAP:DetPron (@>Pron) TARGET Det + $$GENDER + $$NAGD IF (1 Pron + $$GENDER + $$NAGD);
# Probably not all prons. Follow this.


#MAP:r84 (@>N) TARGET Det + $$GENDER + $$NAGD IF (1 N + $$GENDER + $$NAGD);
MAP:r84c (@>N) TARGET Det + $$GENDER + $$NAGD IF (1 A + $$GENDER + $$NAGD); # BARRIER NPNHA);
## sjekk denne!!

MAP:r84c (@>N) TARGET Pron + Dem  + $$GENDER + $$NAGD IF (*1C N + $$GENDER + $$NAGD BARRIER NPNHA);
MAP:r84b (@>N) TARGET Pron + Indef  + $$GENDER + $$NAGD IF (*1 N + $$GENDER + $$NAGD BARRIER NPNHA);

MAP:r84a (@>A) TARGET Det + $$GENDER + $$NAGD IF (1 A + $$GENDER + $$NAGD LINK 1 S-BOUNDARY);
MAP:r84a (@>A) TARGET Det + $$GENDER + $$NAGD IF (1 A + $$GENDER + $$NAGD);

MAP:r84a (@>A) TARGET Pron + Dem + $$GENDER + $$NAGD IF (1 A + $$GENDER + $$NAGD LINK 1 S-BOUNDARY);
MAP:r84a (@>A) TARGET Pron + Indef + $$GENDER + $$NAGD IF (1 A + $$GENDER + $$NAGD LINK 1 S-BOUNDARY); # hmm

MAP:r85 (@>N) TARGET (N Gen) IF (*1 N BARRIER V OR Adv);
MAP:r86 (@>N) TARGET Det IF (*1 N BARRIER V OR Adv OR Pr OR (";"));
MAP:r87 (@>N) TARGET (Det) IF (*1 N BARRIER V OR Adv OR Pr OR (";"));
MAP:r88 (@>N) TARGET A + $$NAGD OR Det + $$NAGD IF (*1 N + $$NAGD OR Num + $$NAGD BARRIER NPNHA);
MAP (@>N) TARGET Num IF (*1 N BARRIER NPNHA);

MAP:sa (@>N) TARGET Prop + Poss IF (*1 N BARRIER NPNH);

# PP
MAP:PropToDatPr (@P<) TARGET Prop + Dat IF (*-1 SOMEDATPREP CBARRIER NPNHA )(NOT *1 Sem/Sur BARRIER NOT-PROP);
MAP:PropToAccPr (@P<) TARGET Prop + Acc IF (*-1 SOMEACCPREP CBARRIER NPNHA )(NOT *1 Sem/Sur BARRIER NOT-PROP);
MAP:PropToGenPr (@P<) TARGET Prop + Gen IF (*-1 SOMEGENPREP CBARRIER NPNHA )(NOT *1 Sem/Sur BARRIER NOT-PROP);

MAP:PropPropToDatPr (@P<) TARGET Prop + Dat IF (-1 (@>N))(-2 SOMEDATPREP)(NOT *1 Sem/Sur BARRIER NOT-PROP);
MAP:PropPropToAccPr (@P<) TARGET Prop + Acc IF (-1 (@>N))(-2 SOMEACCPREP)(NOT *1 Sem/Sur BARRIER NOT-PROP);
MAP:PropPropToGenPr (@P<) TARGET Prop + Gen IF (-1 (@>N))(-2 SOMEGENPREP)(NOT *1 Sem/Sur BARRIER NOT-PROP);

MAP:PropPropPropToDatPr (@P<) TARGET Prop + Dat IF (-1 (@>N))(-2 (@>N))(-3 SOMEDATPREP)(NOT *1 Sem/Sur BARRIER NOT-PROP);
MAP:PropPropPropToAccPr (@P<) TARGET Prop + Acc IF (-1 (@>N))(-2 (@>N))(-3 SOMEACCPREP)(NOT *1 Sem/Sur BARRIER NOT-PROP);
MAP:PropPropPropToGenPr (@P<) TARGET Prop + Gen IF (-1 (@>N))(-2 (@>N))(-3 SOMEGENPREP)(NOT *1 Sem/Sur BARRIER NOT-PROP);

MAP:PronToDatPr (@P<) TARGET Pron + Indef + Dat IF (*-1 SOMEDATPREP CBARRIER NPNHA);
MAP:PronToAccPr (@P<) TARGET Pron + Indef + Acc IF (*-1 SOMEACCPREP CBARRIER NPNHA);
MAP:PronToGenPr (@P<) TARGET Pron + Indef + Gen IF (*-1 SOMEGENPREP CBARRIER NPNHA);

MAP:HeadToDatPr (@P<) TARGET NOMINALHEAD + Dat IF (*-1 SOMEDATPREP CBARRIER NPNHA)(NOT 0 Prop);
MAP:HeadToAccPr (@P<) TARGET NOMINALHEAD + Acc IF (*-1 SOMEACCPREP CBARRIER NPNHA)(NOT 0 Prop);
MAP:HeadToGenPr (@P<) TARGET NOMINALHEAD + Gen IF (*-1 SOMEGENPREP CBARRIER NPNHA)(NOT 0 Prop);

MAP:AdjToDatPr (@P<) TARGET A + Dat IF (*-1 SOMEDATPREP CBARRIER NPNHA)(NOT *1 N OR A);
MAP:AdjToAccPr (@P<) TARGET A + Acc IF (*-1 SOMEACCPREP CBARRIER NPNHA)(NOT *1 N OR A);
MAP:AdjToGenPr (@P<) TARGET A + Gen IF (*-1 SOMEGENPREP CBARRIER NPNHA)(NOT *1 N OR A);

MAP:r81 (@P<) TARGET NOMINALHEAD + Dat IF (*-1 CC CBARRIER NPNHA LINK -1 NOMINALHEAD LINK *-1 SOMEDATPREP CBARRIER NPNH);
MAP:r82 (@P<) TARGET NOMINALHEAD + Acc IF (*-1 CC CBARRIER NPNHA LINK -1 NOMINALHEAD LINK *-1 SOMEACCPREP CBARRIER NPNH);
MAP:r83 (@P<) TARGET NOMINALHEAD + Gen IF (*-1 CC CBARRIER NPNHA LINK -1 NOMINALHEAD LINK *-1 SOMEGENPREP CBARRIER NPNH);

MAP:StrandedPP (@>P) TARGET NOMINALHEAD + Dat IF (*-1 BOS CBARRIER NPNH)(*1 SOMEDATPREP LINK 1 EOS);
MAP:StrandedPP (@>P) TARGET NOMINALHEAD + Acc IF (*-1 BOS CBARRIER NPNH)(*1 SOMEACCPREP LINK 1 EOS);
MAP:StrandedPP (@>P) TARGET NOMINALHEAD + Gen IF (*-1 BOS CBARRIER NPNH)(*1 SOMEGENPREP LINK 1 EOS);
#CBARRIER eller BARRIER?


MAP (@P<) TARGET Inf IF (-1 ("at"))(-2 Pr);
	## … unglingar hava slongt seg fyri at tosa um brennivin.


MAP:P+PP (@P<) TARGET Pr IF (-1 ("aftan"))(0 Pr);
	## aftan fyri sparikassan...

MAP:N+PP (@N<) TARGET Pr IF (-1 N)(*-2 BOS BARRIER V);


MAP:r92 (@N<) TARGET Poss IF (0 $$NAGD)(-1 N + $$NAGD);


MAP:r93 (@N<) TARGET N IF (0 $$NAGD)(-1 (N $$NAGD));
MAP (@P<) TARGET Det IF (-1 Pr)(1 EOS);

MAP:PostGen (@N<) TARGET (N Gen) IF (-1 N);
# MAP:PronPostGen (@N<) TARGET (Pron Gen) IF (-1 N); This is a Det


# Verbal complex

MAP:ONEV (@+FMAINV) TARGET VFIN IF (NEGATE *0 V BARRIER S-BOUNDARY2);

MAP:r69 (@+FAUXV) TARGET COPULA + VFIN IF (*1C Sup BARRIER CS OR CC OR COMMA);
MAP:r69 (@+FAUXV) TARGET ("hava") + VFIN IF (*1C Sup OR PrfPrc BARRIER CS OR CC OR COMMA);
MAP:r69 (@+FAUXV) TARGET COPULA + VFIN IF (*-1C Sup BARRIER CS OR CC OR COMMA);
MAP:r69 (@+FAUXV) TARGET ("hava") + VFIN IF (*-1C Sup OR PrfPrc BARRIER CS OR CC OR COMMA);
MAP:r69 (@+FAUXV) TARGET MODV + VFIN IF (*-1 Inf BARRIER CS OR CC OR COMMA LINK NOT -1 IM OR AUX);
MAP:r69 (@+FAUXV) TARGET MODV + VFIN IF (*1 Inf BARRIER CS OR CC OR COMMA OR IM OR AUX);
#MAP:r69 (@+FAUXV) TARGET AUX + VFIN IF (0*C VINFIN BARRIER CS OR CC OR IM);
# Added C. The rule introduces too many imperatives.
# An laternative restriction would be (0 NOT Imp)

MAP (@-FAUXV) TARGET VINFIN IF (0 AUX)(*-1 AUX BARRIER V) ;
MAP (@-FMAINV) TARGET VINFIN IF (*-1 AUX BARRIER V) ;


MAP (@-FMAINV) TARGET Inf IF (-1 ("at") LINK -1* VFIN) ;
	## Tað fær tíðin at vísa<@-FMAINV>
# BARRIER NOT-ADV-NOUN? or might be a bit strict? -KBU

MAP:infsubj (@-FSUBJ>) TARGET (N Pl Acc) IF (1 Inf);

MAP:infsubj (@-FSUBJ>) TARGET NOMINALHEAD + Acc IF (*-1 VFIN BARRIER NPNH)(1 Inf);

# VAUX was here

MAP:DetPossGen (@N<) TARGET (Det Poss Sg Gen) IF (-1 N);
MAP:PostGenPron (@N<) TARGET (Pron Pers Gen) IF (-1C N + Indef)(NOT *1 N + Indef BARRIER NOT-A);
#MAP:PostGenPron (@N<) TARGET (Pron Pers Gen) IF (-1 N + Indef);
MAP:PreGenPron (@>N) TARGET (Pron Pers Gen) IF (*1 N + Indef BARRIER NOT-A) ;




MAP (@<tSUBJ) TARGET ("tað" Pron Pers Sg Nom) IF (-1 V)(-2 BOS OR Adv)(1 Nom);
MAP (@tSUBJ>) TARGET ("tað" Pron Pers Sg Nom) IF (1 V)(2 (N Nom Indef));
MAP (@tSUBJ>) TARGET ("tað" Pron Pers Sg Nom) IF (1 V)(2 ("ein" Det Nom))(*3 (N Nom Indef) BARRIER NPNH);
MAP (@tSUBJ>) TARGET ("tað" Pron Pers Sg Nom) IF (1 V)(*2 (N Nom Indef) BARRIER NOT-ADV);
MAP (@tSUBJ>) TARGET ("tað" Pron Pers Sg Nom) IF (1 V)(*2 ("ein" Det Nom) BARRIER NPNHA LINK 1 (N Nom Indef));

MAP:r71 (@<SUBJ) TARGET (Num Nom) IF (*-1 (@<tSUBJ) BARRIER NPNHA LINK -1 COPULA)(NOT 1 PRE-N);
MAP:r71 (@<SUBJ) TARGET (N Nom) IF (*-1 (@<tSUBJ) BARRIER NPNHA LINK -1 COPULA);

MAP:TannSum (@SUBJ>) TARGET Det + Nom IF (1 ("sum") LINK *1 COMMA LINK 1 V + 3Sg);

ADD:r71 (@<SPRED) TARGET (N Nom) OR (A Nom) IF (*-1 COPULA BARRIER NPNHA LINK 0 Imp);
ADD:r71 (@<SPRED) TARGET (N Nom) OR (A Nom) IF (*-1 COPULA BARRIER NPNHA LINK *-1 Nom BARRIER AGD);
ADD:r71rel (@<SPRED) TARGET (N Nom) OR (A Nom) IF (*-1 COPULA BARRIER NPNHA LINK -1 COMMA LINK *-1 COMMA LINK -1 Nom);

MAP (@Pron<) TARGET ("sjálvur") IF (-1 Refl);
MAP:PostPoss (@N<) TARGET Det + Poss + $$GENDER IF (-1 N + $$GENDER)(NEGATE 1 NOUNADJ + $$GENDER + $$NAGD);

MAP (@>N) TARGET Num + $$NAGD IF (1 N + $$NAGD);
MAP (@>N) TARGET Num + $$NAGD IF (1 A + $$NAGD)(2 N + $$NAGD);




# subjects


MAP:r72 (@SUBJ>) TARGET ("tú" Pron Pers Sg Nom) IF (*1 (V 2Sg) BARRIER VFIN);
MAP:r72 (@SUBJ>) TARGET ("tú" Pron Pers Sg Nom) IF (*1 (V Prt Sg) BARRIER VFIN);
MAP:r73 (@<SUBJ) TARGET ("tú" Pron Pers Sg Nom) IF (*-1 (V 2Sg) BARRIER VFIN);
MAP:r73 (@<SUBJ) TARGET ("tú" Pron Pers Sg Nom) IF (*-1 (V Prt Sg) BARRIER VFIN);

MAP:r72b (@SUBJ>) TARGET ("eg" Pron Pers Sg Nom) IF (*1 (V 1Sg) BARRIER VFIN);
MAP:r73b (@<SUBJ) TARGET ("eg" Pron Pers Sg Nom) IF (*-1 (V 1Sg) BARRIER VFIN);

MAP:r75 (@<SUBJ) TARGET NOMINALHEAD + Sg + Nom IF (*-1 (V 3Sg) OR (V Sg) BARRIER NOMINALHEAD LINK NOT -1 Nom);
MAP:r75b (@<SUBJ) TARGET NOMINALHEAD + Sg + Nom IF (*-1 (V 3Sg) OR (V Sg) BARRIER NPNH) (0C Nom);

MAP:r74 (@SUBJ>) TARGET NOMINALHEAD + Sg + Nom IF (*1 (V 3Sg) OR (V Sg)) ; #;(NOT 0 Acc LINK 1 CC LINK 1C VFIN);
	## Tíkin hevur lyft beinið og pissar.



MAP:r76 (@SUBJ>) TARGET NOMINALHEAD + Pl + Nom IF (*1 (V Pl) BARRIER CLB);#(":" CLB) OR (";" CLB));
MAP:r77 (@<SUBJ) TARGET NOMINALHEAD + Pl + Nom IF (*-1 (V Pl));

# allur should have another POS.
MAP:r77 (@<SUBJ) TARGET Det + Pl + Nom IF (*-1 (V Pl))(0 ("allur"))(1 V); # Tað munnu øll vera samd um.
MAP:r77 (@SUBJ>) TARGET Det + Pl + Nom IF (0 ("allur") + Pl + Nom)(1 (V Pl)); # Tað munnu øll vera samd um.


# subject with relclause

MAP (@SUBJ>) TARGET NOMINALHEAD + Pl + Nom IF (1 COMMA LINK *1 VFIN LINK *1 COMMA LINK 1 (V Pl)); 

# coordinated subjects

MAP:mapcoordsubj2 (@SUBJ>) TARGET N + Nom IF (*-1 CC BARRIER NPNH LINK -1 N + Nom)(1 VFIN + Pl);
MAP:mapcoordsubj1 (@SUBJ>) TARGET N + Nom IF (1 CC LINK *1 N + Nom BARRIER NPNH LINK 1 VFIN + Pl);

MAP (@SUBJ>) TARGET N + Nom IF (1 CC LINK *1 N + Nom BARRIER NPNH LINK 1 COMMA LINK *1 VFIN LINK *1 COMMA LINK 1 (V Pl));



ADD:rOPR1 (@<OBJ) TARGET (N Acc) OR (Pron Acc) IF (*-1 OBJPREDVERB BARRIER Pr OR S-BOUNDARY)(*1 N + Acc BARRIER NPNHA);
MAP:rOPR2 (@<OPRED) TARGET (N Acc) OR (Pron Acc) OR (A Acc) IF (*-1 NOMINALHEAD + Acc BARRIER NPNHA LINK *-1 OBJPREDVERB BARRIER S-BOUNDARY);


# objects

MAP:AcI (@<OBJ) TARGET Inf IF (-1 (@-FSUBJ>));
MAP:r78 (@-F<OBJ) TARGET (N Acc) OR (Num Acc) OR (Pron Acc) IF (*-1 TV + Inf BARRIER Pr OR S-BOUNDARY OR VFIN OR Sup);
MAP:r78 (@<OBJ) TARGET (N Acc) OR (Num Acc) OR (Pron Acc) IF (*-1 TV OR Sup BARRIER Pr OR S-BOUNDARY OR Inf);
MAP:r78 (@<OBJ) TARGET (Det Acc) (*-1 TV BARRIER Pr OR S-BOUNDARY)(NOT *1 N BARRIER NPNHA);

# Indirect object

MAP:r79 (@<IOBJ) TARGET (N Dat) OR (Num Dat) OR (Pron Dat) IF (*1 (@<OBJ) BARRIER NPNHA);
MAP:r80 (@<OBJ) TARGET Dat IF (*-1 DATV);
MAP:topic (@OBJ>) TARGET OBL IF (*-1 S-BOUNDARY BARRIER VFIN)(1* TV LINK 1* Nom BARRIER CS) ; #TODO
MAP:topic (@OBJ>) TARGET OBL IF (*-1 S-BOUNDARY BARRIER VFIN)(*1 VFIN LINK *1 Nom BARRIER CS LINK *1 TV) ; #TODO
  # better verb than VFIN, parametrize wrt verb, or TV, or whatever.

# Dative object

MAP:r78 (@-F<OBJ) TARGET (N Dat) OR (Num Dat) OR (Pron Dat) IF (*-1 TV + Inf BARRIER Pr OR S-BOUNDARY OR VFIN OR Sup);
MAP:r78 (@<OBJ) TARGET (N Dat) OR (Num Dat) OR (Pron Dat) IF (*-1 TV OR Sup BARRIER Pr OR S-BOUNDARY OR Inf);
MAP:r78 (@<OBJ) TARGET (Det Dat) (*-1 TV BARRIER Pr OR S-BOUNDARY)(NOT *1 N BARRIER NPNHA);


# ADVL

MAP (@ADVL>) TARGET ("bara" Adv) IF (1 Pron)(2 V);
MAP (@ADVL>) TARGET ("bara" Adv) IF (*1 N BARRIER NPNH LINK 1 V);


MAP:r94 (@<SPRED) TARGET A IF (*-1 ("síggja") BARRIER NPNHA)(1 ("út"));
MAP:r95 (@<SPRED) TARGET A IF (-1 ("síggja"))(1 CC)(*2 A);



# Specific constructions
MAP (@N<) TARGET (N Dat) IF (-1 MIDJA);

MAP (@>N) TARGET ("Harri") IF (1 ("Guð"));
    
# Fragments

MAP (@HNOUN) TARGET N IF (NOT *-1 VFIN)(NOT *1 Ind OR Sbj)(NOT 0 SYNTAG) ;
MAP (@HNOUN) TARGET A IF (NOT *-1 VFIN)(NOT *1 Ind OR Sbj)(NOT 0 SYNTAG) ;
MAP (@HNOUN) TARGET Num IF (-1 BOS)(1 EOS);



ADD:r90b (@-F<ADVL) TARGET Pr OR Adv IF (*-1 Inf BARRIER CS OR COMMA OR VFIN OR Sup);
MAP:r90    (@<ADVL) TARGET Pr OR Adv IF (*-1 VFIN OR Sup BARRIER CS OR COMMA OR Inf);

MAP:r91 (@ADVL>) TARGET Pr OR Adv (NEGATE *-1 VFIN BARRIER CS OR COMMA)(*1 VFIN);



MAP (@+FMAINV) TARGET COPULA + VFIN IF (*1 (@<SPRED) BARRIER S-BOUNDARY2 OR CLB) ;
MAP:r70 (@+FAUXV) TARGET AUX + VFIN IF (*1 Sup BARRIER S-BOUNDARY2 OR CLB OR (Nom)) ;
MAP:r70b (@+FAUXV) TARGET AUX + VFIN IF (*-1 V BARRIER S-BOUNDARY2 OR CLB) ;
#MAP:r70c (@+FMAINV) TARGET VFIN ;
MAP:r70c (@+FMAINV) TARGET VFIN IF (NEGATE 0* VFIN BARRIER CS OR CLB);


ADD:r89 (@+FAUXV) TARGET AUX + Ind OR AUX + Imp IF (*1 V BARRIER S-BOUNDARY OR CLB OR SUBJ ) ;

MAP:r89 (@+FMAINV) TARGET (V Prs) OR (V Prt) OR (V Imp);



# We give in

MAP:r96 (@X) TARGET WORD ;



# =========== #
 ###SECTION   #
# =========== #



LIST @SPRED = @<SPRED  @SPRED> ;
LIST @SUBJ = @<SUBJ @SUBJ> ;
LIST @OBJ = @<OBJ @OBJ> ;
LIST @IOBJ = @<IOBJ @IOBJ> ;



# No-syntax early
REMOVE:r97 (@X) ;

REMOVE:r98 (@SPRED) IF (NOT *0 (@SUBJ));#(NOT *1 (@SUBJ));
REMOVE:r99 (@OBJ) IF (*-1 Pr BARRIER NPNHA);
REMOVE:r100 (@IOBJ) IF (*-1 Pr BARRIER NPNHA);

REMOVE Acc IF (0 (Sg @<SUBJ) LINK *-1 (V Sg) OR (V 3Sg) BARRIER (@<SUBJ))(*-1 S-BOUNDARY BARRIER (@SUBJ>)); 

REMOVE:r101 (@P<) IF (*-1 BOS OR (N Acc) OR (N Dat) OR (N Nom) OR V OR CLB OR CS BARRIER Pr OR CC LINK NOT 0 Pr);

REMOVE:r102 (@>N) IF (0C N)(*-1 Pr BARRIER NPNHA);

SELECT:r103 (Sg @<SPRED) IF (*-1 COPULA BARRIER NPNHA LINK -1 (Sg Nom));

SELECT:r104 (Pl Nom @<SPRED) IF (*-1 COPULA BARRIER NPNHA LINK -1 (Pl Nom));
SELECT:r121 (Pl Nom @<SPRED) IF (*-1 ("síggja") BARRIER NPNHA LINK -1 (Pl Nom))(*1 ("út") BARRIER NPNHA);

REMOVE:r105 (@<SUBJ) IF (*-1 VFIN BARRIER S-BOUNDARY LINK -1 (@SUBJ>));
REMOVE:r105 (@<SUBJ) IF (*-1 (@<SUBJ) BARRIER S-BOUNDARY LINK *-1 VFIN BARRIER NPNHA);

SELECT:r106 (@SUBJ>) IF (-1 CS)(1 VFIN);
	## sum hann hevði í lummanum.

SELECT (@>CS);


# Coordination type

REMOVE:rCC1 (@CNP) IF (-1 COMMA)(0 ("og" CC))(*1 VFIN BARRIER S-BOUNDARY);
REMOVE:rCC2 (@CNP) IF (*-1 BOS BARRIER NOT-ADV);
REMOVE:rCC3 (@CNP) IF (-2 BOS)(-1 CC);
REMOVE:rCC4 (@CNP) IF (-1 PUNCT LINK -1 Abbr OR PUNCT LINK -1 BOS);
REMOVE:rCC5 (@CNP) IF (-1 (""") LINK -1 (":")); #"
REMOVE:rCC6 (@CVP) IF (-1 Cmpnd);
REMOVE:rCC7 (@CVP) IF (-1 ("\-") LINK -1 (\?) LINK -1 BOS)(0 ("og"))(1 N);
REMOVE:rCC8 (@CVP) IF (-1 (\?) LINK -1 BOS)(0 ("ja"))(1 N OR A OR (\?));
REMOVE:rCC9 (@CVP) IF (-1 Nom LINK *-1 COMMA BARRIER NPNH LINK -1 Nom)(0 CC)(*1 Nom BARRIER NPNH);
REMOVE (@CVP) IF (-1C A)(1C A LINK *1 N BARRIER NPNH);
REMOVE (@CVP) IF (NEGATE *1 VFIN BARRIER S-BOUNDARY OR PUNCT-RIGHT OR COMMA);
REMOVE (@CVP) IF (-1C A)(1C A LINK *1 N BARRIER NPNH);
REMOVE (@CNP) IF (1 CS);
REMOVE (@CNP) IF (0 CC)(1C VFIN);
REMOVE (@CNP) IF (1C VFIN);
SELECT (@CVP) IF (*-1C VFIN BARRIER S-BOUNDARY)(*1C N OR Pron BARRIER NPNHA);
SELECT (@CVP) IF (*-1C VFIN BARRIER S-BOUNDARY)(*1C V BARRIER NPNHA);

# NPs

REMOVE:P+NP (@P<) IF (0 (@>Pron))(1 (@P<));

REMOVE (Pron @>N) IF (0 (Det @>N))(Not 0 Gen);

REMOVE (@>N) IF (0 (Gen @N<))(-1 N);

REMOVE:NP (@P<) IF (0 Num + $$NAGD)(1 $$NAGD + (@P<));

SELECT (N Sg) IF (1C  Poss + Sg + @N<);
SELECT (N Pl) IF (1C  Poss + Pl + @N<);

SELECT (Poss $$NAGD) IF (-1C N + $$NAGD)(0 (@N<));

REMOVE (Det Msc) IF (NOT 0 Poss)(*1C (N Neu) BARRIER NPNH);
REMOVE (Det Fem) IF (NOT 0 Poss)(*1C (N Neu) BARRIER NPNH);
REMOVE (Det Neu) IF (NOT 0 Poss)(*1C (N Msc) BARRIER NPNH);
REMOVE (Det Fem) IF (NOT 0 Poss)(*1C (N Msc) BARRIER NPNH);
REMOVE (Det Msc) IF (NOT 0 Poss)(*1C (N Fem) BARRIER NPNH);
REMOVE (Det Neu) IF (NOT 0 Poss)(*1C (N Fem) BARRIER NPNH);

#REMOVE (@SUBJ>) IF (0 (@>N))(*1 (@SUBJ>) BARRIER NPNH);

REMOVE Imp IF (0 (@>N));
       ## Hitt størra ljós.

SELECT ($$NAGD) IF (0C (@>N))(*1C N + $$NAGD);

# Postverbal subjects

SELECT (@<SUBJ) IF (-2 (@OBJ>) OR (@ADVL>))(-1 VFIN + Pl)(0 Pl);
       ## Men her hafa tey ikki fullt yvirlit.


# Subjects

SELECT:onesubj (@SUBJ>) IF (1 VFIN)(NOT *2 (@<SUBJ) BARRIER CLB);


SELECT:defsubj (Def) IF (NOT -1 Indef)(0C (@SUBJ>))(1 VFIN);
	       ## at talan var um ein dyst

SELECT:coordsubj (@SUBJ>) IF (*-1 CC BARRIER NPNH LINK -1 N)(1 VFIN + Pl);


# Subject predicatives, SPRED

REMOVE (@<SUBJ) IF (*-1 VFIN BARRIER NPNH LINK -1 (@SUBJ>))(0 (@<SPRED));
REMOVE (@<SUBJ) IF (*-1 VFIN BARRIER NPNH LINK -1 COMMA LINK *-1 VFIN LINK *-1 COMMA LINK -1 (@SUBJ>))(0 (@<SPRED));

REMOVE (@SUBJ>) IF (0 (@<SPRED)); # more strict context for spred

# Third position subjects, postverbal subjects

SELECT:PostVSubj1 (@<SUBJ) IF (*-1 VFIN BARRIER NPNH LINK -1 BOS OR (@<ADVL) OR (@P<) OR COMMA OR (PUNCT LEFT));
SELECT:PostVSubj2 (@<SUBJ) IF (*-1 VFIN BARRIER NPNH LINK -1 PUNCT LINK -1 COMMA); # (XX want more conditions)

# Topicalised non-subjects

# Indirect objects

REMOVE (@<IOBJ) IF (*-1 V BARRIER NPNH LINK NOT *-1 (@OBJ>))(NEGATE *1 (@OBJ>) BARRIER S-BOUNDARY OR CC OR V);

SELECT (@<OBJ) IF (*-1 CC BARRIER NPNH LINK -1C (@<OBJ));
REMOVE (@SUBJ>) IF (*-1 VFIN LINK -1C (@SUBJ>))(0 (@<OBJ));


# Direct objects

REMOVE Acc IF (*-1 ("seg" Acc) BARRIER NOT-ACC LINK -1 V);
REMOVE:NotPostSubj (@SUBJ>) IF (0 (@<OBJ))(*1 CLB BARRIER VFIN);

REMOVE (@SUBJ>) IF (0 (@<OBJ))(NOT *1 VFIN BARRIER S-BOUNDARY);
REMOVE (@SUBJ>) IF (0 (@<OBJ))(1 CC)(2C VFIN);

REMOVE (@+FMAINV) IF (0* VFIN)(0 (V @<OBJ));

# Subject predicatives

REMOVE (@<OBJ) IF (*-1 COPULA BARRIER NPNHA)(0 (@<SPRED));

# PPs

REMOVE:r107 (@<SUBJ) IF (*-1C Pr BARRIER NPNH)(1C (@P<));
REMOVE:r107a (@<SUBJ) IF (*-1C Pr BARRIER NPNH)(0 (@P<));

REMOVE:r107b (@SUBJ>) IF (*-1C Pr BARRIER NPNH)(1C (@P<));
REMOVE:r107c (@SUBJ>) IF (*-1C Pr BARRIER NPNH)(0 (@P<));

REMOVE:r108 (@<OBJ) IF (*-1C Pr BARRIER NPNH)(1C (@P<));
REMOVE:r108a (@<OBJ) IF (*-1C Pr BARRIER NPNH)(0 (@P<));

REMOVE:r109 (@<ADVL) IF (*-1C Pr BARRIER NPNH)(1C (@P<));

REMOVE:r110 (@<SPRED) IF (*-1C Pr BARRIER NPNH)(1C (@P<));
REMOVE:r110a (@<SPRED) IF (*-1C Pr BARRIER NPNH)(0 (@P<));

REMOVE:r111 (@<OPRED) IF (*-1C Pr BARRIER NPNH)(1C (@P<));
REMOVE:r111a (@<OPRED) IF (*-1C Pr BARRIER NPNH)(0 (@P<));

REMOVE:r112 V IF (-1 Pr)(0 (@P<));
REMOVE:r112b (@HNOUN) IF (*-1 Pr BARRIER NPNH)(0 (@P<));


# Adverbials
# (after the Pl / Inf disambiguation)
REMOVE (@<ADVL) IF (0 (@-F<ADVL))(-1C Inf);
REMOVE (@-F<ADVL) IF (0 (@<ADVL))(*-1C VFIN BARRIER VINFIN);
	## Tú sært fólk standa í gøtunum. 


	## av tilvild


# Number SPRED disambiguation

SELECT (Nom @>N) IF (*1C N + Nom BARRIER NPNH OR PRE-N + NOTNOM);
SELECT (Acc @>N) IF (*1C N + Acc BARRIER NPNH OR PRE-N + NOTACC);
SELECT (Dat @>N) IF (*1C N + Dat BARRIER NPNH OR PRE-N + NOTDAT);


REMOVE:r115 (A @>N) IF (0 V)(NOT 1 N OR A);
# Alternatively Demand Nom to the left or Num to the right.

SELECT Pl IF (-1 Pl + (@SUBJ>) LINK *-1 S-BOUNDARY BARRIER NOT-CC)(0 V);
       ## Men vit vita, at...

# Gender SPRED disambiguation

REMOVE (Neu @<SPRED) IF (*-1C Fem + @SUBJ>)(0 Fem + @<SPRED);
REMOVE (Msc @<SPRED) IF (*-1C Fem + @SUBJ>)(0 Fem + @<SPRED);
REMOVE (Neu @<SPRED) IF (*-1C Msc + @SUBJ>)(0 Msc + @<SPRED);
REMOVE (Fem @<SPRED) IF (*-1C Msc + @SUBJ>)(0 Msc + @<SPRED);
REMOVE (Fem @<SPRED) IF (*-1C Neu + @SUBJ>)(0 Neu + @<SPRED);
REMOVE (Msc @<SPRED) IF (*-1C Neu + @SUBJ>)(0 Neu + @<SPRED);


# OPRED

REMOVE (@SUBJ>) IF (0 (@<OPRED));
REMOVE (@<ADVL) IF (0 (@<OPRED));
# Postsyntactical verbal dis

#SELECT:r116 Ind IF (NEGATE 0* VFIN);

#SELECT Neu IF (0C (@<OPRED))(*-1 (@<OBJ) + Neu OR (@<OBJ) + ("tað"));
#so, does OPRED agree with OBJ or with SUBJ?

REMOVE (@+FAUXV) IF (0 (@+FMAINV))(NOT *0 Inf OR PrfPrc OR Sup BARRIER S-BOUNDARY OR CLB OR SUBJ);

SELECT (3Sg) IF (-1C (Sg @SUBJ>));


SELECT:r117 CC IF (-1 BOS)(1C (@SUBJ));
	## Men tað var hált.
 	## Tað var, sum vóru tey sett.

REMOVE:TEST 1Sg IF (-1 (@SUBJ>))(0 3Sg);
REMOVE:TEST 1Sg IF (*1 (@<SUBJ) BARRIER NPNH)(0 3Sg);


# New go at NP disambiguation

SELECT $$GENDER IF (0 A)(-1 $$GENDER + (@>A));
SELECT $$NAGD IF (0 A)(-1 $$NAGD + (@>A));

REMOVE (@P<) IF (0 A + (@>N));

# REMOVE Acc IF 


# PP in NP

# Philosophy: PP in NP are static.
REMOVE Acc IF (0 Dat + (@P<))(*-1 Pr + (@N<) BARRIER NPNH);

# Specific lexemes

# Stray NPs

REMOVE:r118 (Acc @HNOUN) IF (0 (Nom @HNOUN));
REMOVE:r119 (Gen @HNOUN) IF (0 (Nom @HNOUN));
REMOVE:r120 (Dat @HNOUN) IF (0 (Nom @HNOUN));

REMOVE:NoHnoun (@HNOUN) IF (0* VFIN);


# Substitute rules

SUBSTITUTE:SUBS_vfin (@+FAUXV) (@rc-VAUX) TARGET V (*-1 ("sum" CS) BARRIER VFIN OR CLB); 


SUBSTITUTE:AorB (@>N) (@P<) TARGET Det (-1 Pr LINK *-1 Pr)(1 CLB);
# Perhaps also demand an intermediate sem or og


SECTION

# Late rules

SELECT $$NAGD IF (0C Poss)(-1C N + $$NAGD);

REMOVE (@+FMAINV) IF (0 (+FAUXV));

