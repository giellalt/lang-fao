#!/bin/bash
# @configure_input@

# This is a shell script that will loop over the *.yaml files found in this dir
# and run them through the Apertium Quality morph-test.py tool.

###### Variables: #######
transducer=gt-norm
analyserfile=${srcdir}/../../../src/analyser-$transducer
generatorfile=${srcdir}/../../../src/generator-$transducer
pythonbin=@PYTHON@
runtests="$pythonbin $GTCORE/scripts/morph-test.py"

###### Start testing: #######
transducer_found=0
Fail=0

# Loop over the transducer types first - we test both hfst and xfst if found:
for f in .xfst .hfst; do
	if [ $f == ".xfst" ]; then
		lookuptool="@LOOKUP@"
		section="xerox"
	else
		lookuptool="@HFST_LOOKUP@"
		section="hfst"
	fi
	if [ -f "$generatorfile$f" -a -f "$analyserfile$f" ]; then
		let "transducer_found += 1"
		if [ -z $(find ${srcdir} -name "*_$transducer.yaml") ]; then
			echo
			echo "*** Warning: No YAML data files found. Skipping test."
			echo "*** Filenames covered by this test needs to end in:"
			echo "***"
			echo "*** _$transducer.yaml"
			echo
			exit 77
		fi
		
		# Loop over the available yaml files, and run the tests:
		for file in ${srcdir}/*_$transducer.yaml; do
			(( i += 1 ))
			echo
			echo "Subtest $i - $section: Testing $file using $analyserfile$f"
			echo
			$runtests -c -C -i -S $section \
				--app $lookuptool \
				--gen $generatorfile$f \
				--morph $analyserfile$f \
				$file
			if [ $? -gt 0 ]; then
			    Fail=1
			    echo
			    echo "Test failed. To rerun with more details, please do:"
			    echo
			    echo "pushd $(pwd); $runtests -c -i -S $section --app $lookuptool --gen $generatorfile$f --morph $analyserfile$f $file; popd"
			    echo
			fi
		done
	fi
done

# At least one of the Xerox or HFST tests failed:
if [ "$Fail" = "1" ]; then
	exit 1
fi

# Fail if no transducer were found:
if [ $transducer_found -eq 0 ]; then
    echo No transducer found
    exit 1
fi
